swagger: "2.0"
info:
  title: Noted API Documentation
  version: "1.0"
consumes:
  - application/json
produces:
  - application/json
paths:
  /accounts:
    get:
      summary: List users based on email regex.
      operationId: AccountsAPI_ListAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAccountsResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: emailContains
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
    post:
      summary: Create an account using the email and password flow.
      operationId: AccountsAPI_CreateAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateAccountRequest'
  /accounts/{accountId}:
    get:
      summary: Must be authenticated.
      operationId: AccountsAPI_GetAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: email
          in: query
          required: false
          type: string
    delete:
      summary: Must be account owner.
      operationId: AccountsAPI_DeleteAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
    patch:
      summary: Must be account owner. Can only update `account.name`.
      operationId: AccountsAPI_UpdateAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              account:
                $ref: '#/definitions/v1Account'
              updateMask:
                type: string
  /authenticate:
    post:
      summary: Authenticate using the email and password flow.
      operationId: AccountsAPI_Authenticate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AuthenticateResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AuthenticateRequest'
  /groups:
    get:
      summary: Must be group member. Returns only the non-array fields of a group.
      operationId: GroupsAPI_ListGroups
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListGroupsResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: query
          required: false
          type: string
    post:
      summary: |-
        Creates a group with a single administrator member (the authenticated user).
        Must be authenticated.
      operationId: GroupsAPI_CreateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateGroupRequest'
  /groups/{groupId}:
    get:
      summary: |-
        Must be group member.
        If the caller is not a member but has been invited to the group or has
        an invite code link, it will access a limited view of the group.
      operationId: GroupsAPI_GetGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteLinkCode
          description: |-
            (Optional) If the requester isn't a member of the group nor have they
            been invited directly, they can provide an invite_link_code that will
            give them a public preview of the group they wish to join.
          in: query
          required: false
          type: string
    delete:
      summary: |-
        Must be group administrator.
        Deletes all the associated resources (members, notes).
      operationId: GroupsAPI_DeleteGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
    patch:
      summary: Must be group administrator.
      operationId: GroupsAPI_UpdateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
definitions:
  BlockCode:
    type: object
    properties:
      snippet:
        type: string
      lang:
        type: string
  BlockImage:
    type: object
    properties:
      url:
        type: string
      caption:
        type: string
  v1AcceptInviteResponse:
    type: object
    properties:
      member:
        $ref: '#/definitions/v1GroupMember'
  v1Account:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
  v1AuthenticateRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  v1AuthenticateResponse:
    type: object
    properties:
      token:
        type: string
  v1Block:
    type: object
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/v1BlockType'
      heading:
        type: string
      paragraph:
        type: string
      numberPoint:
        type: string
      bulletPoint:
        type: string
      image:
        $ref: '#/definitions/BlockImage'
      code:
        $ref: '#/definitions/BlockCode'
      math:
        type: string
  v1BlockType:
    type: string
    enum:
      - TYPE_HEADING_1
      - TYPE_HEADING_2
      - TYPE_HEADING_3
      - TYPE_PARAGRAPH
      - TYPE_MATH
      - TYPE_CODE
      - TYPE_BULLET_POINT
      - TYPE_NUMBER_POINT
      - TYPE_IMAGE
  v1ConversationMessage:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      conversationId:
        type: string
      senderAccountId:
        type: string
      content:
        type: string
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
  v1CreateAccountRequest:
    type: object
    properties:
      password:
        type: string
      email:
        type: string
      name:
        type: string
  v1CreateAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
  v1CreateGroupRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  v1CreateGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
  v1CreateNoteResponse:
    type: object
    properties:
      note:
        $ref: '#/definitions/v1Note'
  v1CreateWorkspaceResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
  v1DefinitionWidget:
    type: object
    properties:
      word:
        type: string
      gender:
        type: string
      type:
        type: string
      content:
        type: string
  v1DeleteAccountResponse:
    type: object
  v1DeleteBlockResponse:
    type: object
  v1DeleteConversationMessageResponse:
    type: object
  v1DeleteGroupResponse:
    type: object
  v1DeleteNoteResponse:
    type: object
  v1DenyInviteResponse:
    type: object
  v1ExportNoteResponse:
    type: object
    properties:
      file:
        type: string
        format: byte
  v1ExtractKeywordsBatchResponse:
    type: object
    properties:
      keywordsArray:
        type: array
        items:
          $ref: '#/definitions/v1ExtractKeywordsResponse'
  v1ExtractKeywordsResponse:
    type: object
    properties:
      keywords:
        type: array
        items:
          type: string
  v1GenerateInviteLinkResponse:
    type: object
    properties:
      inviteLink:
        $ref: '#/definitions/v1GroupInviteLink'
  v1GenerateWidgetsResponse:
    type: object
    properties:
      widgets:
        type: array
        items:
          $ref: '#/definitions/v1Widget'
  v1GetAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
  v1GetConversationMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1ConversationMessage'
  v1GetConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1GroupConversation'
  v1GetGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
  v1GetInviteLinkResponse:
    type: object
    properties:
      inviteLink:
        $ref: '#/definitions/v1GroupInviteLink'
  v1GetInviteResponse:
    type: object
    properties:
      invite:
        $ref: '#/definitions/v1GroupInvite'
  v1GetMemberResponse:
    type: object
    properties:
      member:
        $ref: '#/definitions/v1GroupMember'
  v1GetNoteResponse:
    type: object
    properties:
      note:
        $ref: '#/definitions/v1Note'
  v1Group:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      workspaceAccountId:
        type: string
      avatarUrl:
        type: string
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
      members:
        type: array
        items:
          $ref: '#/definitions/v1GroupMember'
      conversations:
        type: array
        items:
          $ref: '#/definitions/v1GroupConversation'
      invites:
        type: array
        items:
          $ref: '#/definitions/v1GroupInvite'
      inviteLinks:
        type: array
        items:
          $ref: '#/definitions/v1GroupInviteLink'
  v1GroupConversation:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      createdAt:
        type: string
        format: date-time
  v1GroupInvite:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      senderAccountId:
        type: string
      recipientAccountId:
        type: string
      createdAt:
        type: string
        format: date-time
      validUntil:
        type: string
        format: date-time
  v1GroupInviteLink:
    type: object
    properties:
      code:
        type: string
      generatedByAccountId:
        type: string
      createdAt:
        type: string
        format: date-time
      validUntil:
        type: string
        format: date-time
  v1GroupMember:
    type: object
    properties:
      accountId:
        type: string
      isAdmin:
        type: boolean
      joinedAt:
        type: string
        format: date-time
  v1HttpError:
    type: object
    properties:
      error:
        type: string
  v1ImageWidget:
    type: object
    properties:
      title:
        type: string
      url:
        type: string
      caption:
        type: string
  v1InsertBlockResponse:
    type: object
    properties:
      block:
        $ref: '#/definitions/v1Block'
  v1ListAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/v1Account'
  v1ListConversationMessagesResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/v1ConversationMessage'
  v1ListGroupsResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/v1Group'
  v1ListInvitesResponse:
    type: object
    properties:
      invites:
        type: array
        items:
          $ref: '#/definitions/v1GroupInvite'
  v1ListNotesResponse:
    type: object
    properties:
      notes:
        type: array
        items:
          $ref: '#/definitions/v1Note'
  v1Note:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      authorAccountId:
        type: string
      title:
        type: string
      blocks:
        type: array
        items:
          $ref: '#/definitions/v1Block'
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
      analyzedAt:
        type: string
        format: date-time
  v1NoteExportFormat:
    type: string
    enum:
      - NOTE_EXPORT_FORMAT_MARKDOWN
      - NOTE_EXPORT_FORMAT_PDF
  v1Recipient:
    type: object
    properties:
      accountId:
        type: string
  v1RemoveMemberResponse:
    type: object
  v1RevokeInviteLinkResponse:
    type: object
  v1RevokeInviteResponse:
    type: object
  v1SendConversationMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1ConversationMessage'
  v1SendEmailResponse:
    type: object
  v1SendInviteResponse:
    type: object
    properties:
      invite:
        $ref: '#/definitions/v1GroupInvite'
  v1SummarizeResponse:
    type: object
    properties:
      summary:
        type: string
        description: Small text output which summarizes the original entry.
  v1UpdateAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
  v1UpdateBlockResponse:
    type: object
    properties:
      block:
        $ref: '#/definitions/v1Block'
  v1UpdateConversationMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1ConversationMessage'
  v1UpdateConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1GroupConversation'
  v1UpdateGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
  v1UpdateMemberResponse:
    type: object
    properties:
      member:
        $ref: '#/definitions/v1GroupMember'
  v1UpdateNoteResponse:
    type: object
    properties:
      note:
        $ref: '#/definitions/v1Note'
  v1UseInviteLinkResponse:
    type: object
  v1WebsiteWidget:
    type: object
    properties:
      title:
        type: string
      url:
        type: string
      description:
        type: string
  v1Widget:
    type: object
    properties:
      websiteWidget:
        $ref: '#/definitions/v1WebsiteWidget'
      imageWidget:
        $ref: '#/definitions/v1ImageWidget'
      definitionWidget:
        $ref: '#/definitions/v1DefinitionWidget'
security:
  - bearerAuth: []
