swagger: "2.0"
info:
  title: Noted API Documentation
  version: "1.0"
consumes:
  - application/json
produces:
  - application/json
paths:
  /accounts:
    get:
      summary: List users based on email regex.
      operationId: AccountsAPI_ListAccounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListAccountsResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: emailContains
          in: query
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
    post:
      summary: Create an account using the email and password flow.
      operationId: AccountsAPI_CreateAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateAccountRequest'
  /accounts/forget:
    post:
      summary: Send email to account containing code to create a new password.
      operationId: AccountsAPI_ForgetAccountPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ForgetAccountPasswordResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ForgetAccountPasswordRequest'
  /accounts/forget/validate:
    post:
      summary: Compare forgot password token provided by user with the one store in db.
      operationId: AccountsAPI_ForgetAccountPasswordValidateToken
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ForgetAccountPasswordValidateTokenResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1ForgetAccountPasswordValidateTokenRequest'
  /accounts/{accountId}:
    get:
      summary: Allows getting an account by ID or searching for one through email.
      operationId: AccountsAPI_GetAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: email
          in: query
          required: false
          type: string
    delete:
      summary: Must be account owner.
      operationId: AccountsAPI_DeleteAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
    patch:
      summary: Must be account owner. Can only update `account.name`.
      operationId: AccountsAPI_UpdateAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: account
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Account'
            required:
              - account
  /accounts/{accountId}/password:
    patch:
      summary: Update account password.
      operationId: AccountsAPI_UpdateAccountPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateAccountPasswordResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
              token:
                type: string
                title: Token from the reset email password if forgot password
              oldPassword:
                type: string
                title: Old password if the account is already log-in
            required:
              - password
  /accounts/{accountId}/picture:
    get:
      operationId: AccountsAPI_GetAccountProfilePicture
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountProfilePictureResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
    post:
      operationId: AccountsAPI_UploadAccountProfilePicture
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UploadAccountProfilePictureResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              image:
                $ref: '#/definitions/accountsv1Image'
            required:
              - image
  /accounts/{accountId}/validate:
    patch:
      summary: Validate account email.
      operationId: AccountsAPI_ValidateAccount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ValidateAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              validationToken:
                type: string
            required:
              - validationToken
  /authenticate:
    post:
      summary: Authenticate using the email and password flow.
      operationId: AccountsAPI_Authenticate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AuthenticateResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AuthenticateRequest'
  /authenticate/google:
    post:
      summary: Authenticate using the Google OAuth flow.
      operationId: AccountsAPI_AuthenticateGoogle
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AuthenticateGoogleResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1AuthenticateGoogleRequest'
  /beta/mobile:
    post:
      summary: Registers the user to the mobile application beta.
      operationId: AccountsAPI_RegisterUserToMobileBeta
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RegisterUserToMobileBetaResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1RegisterUserToMobileBetaRequest'
  /groups:
    get:
      summary: Must be group member. Returns only the non-array fields of a group.
      operationId: GroupsAPI_ListGroups
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListGroupsResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: accountId
          in: query
          required: true
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
    post:
      summary: Creates a group with a single administrator member (the authenticated user). Must be authenticated.
      operationId: GroupsAPI_CreateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1CreateGroupRequest'
  /groups/invites/{identifierAccountId}/stream:
    get:
      operationId: GroupsAPI_StreamInvites
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: '#/definitions/v1StreamInvitesResponse'
            title: Stream result of v1StreamInvitesResponse
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: identifierAccountId
          description: Returns only invites destined to recipient.
          in: path
          required: true
          type: string
        - name: groupId
          in: query
          required: false
          type: string
  /groups/invites/{identifierAccountId}/stream/terminate:
    put:
      operationId: GroupsAPI_EndStreamInvites
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EndStreamInvitesResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: identifierAccountId
          description: terminate background service dedicated to account_id
          in: path
          required: true
          type: string
  /groups/{groupId}:
    get:
      summary: Must be group member. If the caller is not a member but has been invited to the group or has an invite code link, it will access a limited view of the group.
      operationId: GroupsAPI_GetGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteLinkCode
          description: |-
            If the requester isn't a member of the group nor have they
            been invited directly, they can provide an invite_link_code that will
            give them a public preview of the group they wish to join.
          in: query
          required: false
          type: string
    delete:
      summary: Must be group administrator. Deletes all the associated resources (members, notes).
      operationId: GroupsAPI_DeleteGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
    patch:
      summary: Must be group administrator.
      operationId: GroupsAPI_UpdateGroup
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateGroupResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
  /groups/{groupId}/activity:
    get:
      summary: Must be a group member. List all the activities in a group.
      operationId: GroupsAPI_ListActivities
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListActivitiesResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: accountId
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          required: false
          type: integer
          format: int64
  /groups/{groupId}/activity/{activityId}:
    get:
      summary: Must be a group member. Returns a signle activity in a group.
      operationId: GroupsAPI_GetActivity
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetActivityResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: activityId
          in: path
          required: true
          type: string
  /groups/{groupId}/inviteLinks:
    post:
      summary: Must be group member. generated_by_account_id defaults to the authenticated user.
      operationId: GroupsAPI_GenerateInviteLink
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateInviteLinkResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
  /groups/{groupId}/inviteLinks/{inviteLinkCode}:
    get:
      summary: Must be group member.
      operationId: GroupsAPI_GetInviteLink
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInviteLinkResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteLinkCode
          in: path
          required: true
          type: string
    delete:
      summary: Must be group member.
      operationId: GroupsAPI_RevokeInviteLink
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RevokeInviteLinkResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteLinkCode
          in: path
          required: true
          type: string
    post:
      summary: Must not be group member. Makes the authenticated join the group on success.
      operationId: GroupsAPI_UseInviteLink
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UseInviteLinkResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteLinkCode
          in: path
          required: true
          type: string
  /groups/{groupId}/invites:
    get:
      summary: Must be group administrator or sender or recipient.
      operationId: GroupsAPI_ListInvites2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListInvitesResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          description: Returns only invites for a given group.
          in: path
          required: true
          type: string
        - name: senderAccountId
          description: Returns only invites from sender.
          in: query
          required: false
          type: string
        - name: recipientAccountId
          description: Returns only invites destined to recipient.
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
    post:
      summary: The sender defaults to the authenticated user. Must be group member.
      operationId: GroupsAPI_SendInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SendInviteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              recipientAccountId:
                type: string
            required:
              - recipientAccountId
  /groups/{groupId}/invites/{inviteId}:
    get:
      summary: Must be group administrator or sender or recipient.
      operationId: GroupsAPI_GetInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetInviteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteId
          in: path
          required: true
          type: string
    delete:
      summary: Must be group administrator or sender. Deletes the invitation without making the recipient join the group.
      operationId: GroupsAPI_RevokeInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RevokeInviteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteId
          in: path
          required: true
          type: string
  /groups/{groupId}/invites/{inviteId}/accept:
    post:
      summary: Must be recipient. Accepting an invitation automatically adds the recipient to the group and deletes the invite.
      operationId: GroupsAPI_AcceptInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1AcceptInviteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteId
          in: path
          required: true
          type: string
  /groups/{groupId}/invites/{inviteId}/deny:
    post:
      summary: Must be recipient. Deletes the invitation without making the recipient join the group.
      operationId: GroupsAPI_DenyInvite
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DenyInviteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: inviteId
          in: path
          required: true
          type: string
  /groups/{groupId}/members/{accountId}:
    get:
      summary: Must be group member.
      operationId: GroupsAPI_GetMember
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetMemberResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          type: string
    delete:
      summary: Must be group administrator or the authenticated user removing itself from the group.
      operationId: GroupsAPI_RemoveMember
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1RemoveMemberResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          type: string
    patch:
      summary: Must be group administrator. Can only update `role`.
      operationId: GroupsAPI_UpdateMember
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateMemberResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: accountId
          in: path
          required: true
          type: string
        - name: member
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GroupMember'
            required:
              - member
  /groups/{groupId}/notes:
    get:
      summary: List notes in a group, authored by a user or both. Must have read access to the notes.
      operationId: NotesAPI_ListNotes2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListNotesResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: authorAccountId
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
    post:
      summary: Must be group member, author_account_id defaults to the user making the request. Create a new note in database.
      operationId: NotesAPI_CreateNote
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateNoteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              blocks:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/v1Block'
              lang:
                type: string
  /groups/{groupId}/notes/{noteId}:
    get:
      summary: Must be group member or author. Return a note from id provided.
      operationId: NotesAPI_GetNote
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetNoteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
    delete:
      summary: Must be author. Delete a single note in database.
      operationId: NotesAPI_DeleteNote
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteNoteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
    patch:
      summary: Must be author. Can only update `title` or `blocks`.
      operationId: NotesAPI_UpdateNote
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateNoteResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: note
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Note'
            required:
              - note
  /groups/{groupId}/notes/{noteId}/blocks:
    post:
      summary: Must be author. Insert a block of content in a note at a specific index.
      operationId: NotesAPI_InsertBlock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1InsertBlockResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              index:
                type: integer
                format: int64
              block:
                $ref: '#/definitions/v1Block'
            required:
              - index
              - block
  /groups/{groupId}/notes/{noteId}/blocks/{blockId}:
    delete:
      summary: Must be author. Delete a block in a note and replace the indexes of the others.
      operationId: NotesAPI_DeleteBlock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteBlockResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: blockId
          in: path
          required: true
          type: string
    patch:
      summary: Must be author. Update a block content.
      operationId: NotesAPI_UpdateBlock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateBlockResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: blockId
          in: path
          required: true
          type: string
        - name: block
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Block'
            required:
              - block
  /groups/{groupId}/notes/{noteId}/blocks/{blockId}/index:
    post:
      summary: Must be author. Update a block index.
      operationId: NotesAPI_UpdateBlockIndex
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UpdateBlockIndexResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: blockId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              index:
                type: integer
                format: int64
            required:
              - index
  /groups/{groupId}/notes/{noteId}/permission:
    post:
      operationId: NotesAPI_ChangeNoteEditPermission
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ChangeNoteEditPermissionResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              recipientAccountId:
                type: string
              type:
                $ref: '#/definitions/ChangeNoteEditPermissionRequestAction'
            required:
              - recipientAccountId
  /groups/{groupId}/notes/{noteId}/quiz:
    get:
      operationId: NotesAPI_GenerateQuiz
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateQuizResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
  /groups/{groupId}/notes/{noteId}/summary:
    get:
      operationId: NotesAPI_GenerateSummary
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateSummaryResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
  /groups/{groupId}/notes/{noteId}/widgets:
    get:
      summary: Must be a group member. Returns all the relevent widgets from the given note id.
      operationId: RecommendationsAPI_GenerateWidgets
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GenerateWidgetsResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
  /groups/{groupId}/notes/{noteId}/{blockId}/comment:
    post:
      operationId: NotesAPI_CreateBlockComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1CreateBlockCommentResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: blockId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              comment:
                $ref: '#/definitions/BlockComment'
            required:
              - comment
  /groups/{groupId}/notes/{noteId}/{blockId}/comment/{commentId}:
    delete:
      operationId: NotesAPI_DeleteBlockComment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1DeleteBlockCommentResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: blockId
          in: path
          required: true
          type: string
        - name: commentId
          in: path
          required: true
          type: string
  /groups/{groupId}/notes/{noteId}/{blockId}/comments:
    get:
      operationId: NotesAPI_ListBlockComments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListBlockCommentsResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: noteId
          in: path
          required: true
          type: string
        - name: blockId
          in: path
          required: true
          type: string
  /invites:
    get:
      summary: Must be group administrator or sender or recipient.
      operationId: GroupsAPI_ListInvites
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListInvitesResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: senderAccountId
          description: Returns only invites from sender.
          in: query
          required: false
          type: string
        - name: recipientAccountId
          description: Returns only invites destined to recipient.
          in: query
          required: false
          type: string
        - name: groupId
          description: Returns only invites for a given group.
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
  /notes:
    get:
      summary: List notes in a group, authored by a user or both. Must have read access to the notes.
      operationId: NotesAPI_ListNotes
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ListNotesResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: authorAccountId
          in: query
          required: false
          type: string
        - name: groupId
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
  /search/accounts:
    post:
      summary: Allows getting an account by ID or searching for one through email.
      operationId: AccountsAPI_GetAccount2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetAccountResponse'
        "404":
          description: Resource not found or lacking permissions to access the resource.
          schema:
            $ref: '#/definitions/v1HttpError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1GetAccountRequest'
definitions:
  BlockCode:
    type: object
    properties:
      snippet:
        type: string
      lang:
        type: string
  BlockComment:
    type: object
    properties:
      id:
        type: string
      authorId:
        type: string
      content:
        type: string
  BlockTextStyle:
    type: object
    properties:
      style:
        $ref: '#/definitions/TextStyleStyle'
      pos:
        $ref: '#/definitions/TextStylePosition'
      color:
        $ref: '#/definitions/TextStyleColor'
  ChangeNoteEditPermissionRequestAction:
    type: string
    enum:
      - ACTION_GRANT
      - ACTION_REMOVE
  TextStyleColor:
    type: object
    properties:
      r:
        type: integer
        format: int32
      g:
        type: integer
        format: int32
      b:
        type: integer
        format: int32
  TextStylePosition:
    type: object
    properties:
      start:
        type: string
        format: int64
      length:
        type: string
        format: int64
  TextStyleStyle:
    type: string
    enum:
      - STYLE_BG_COLOR
      - STYLE_TXT_COLOR
      - STYLE_BOLD
      - STYLE_ITALIC
      - STYLE_UNDERLINE
  accountsv1Image:
    type: object
    properties:
      image:
        type: string
        format: byte
      type:
        $ref: '#/definitions/v1ImageType'
    required:
      - image
      - type
  v1AcceptInviteResponse:
    type: object
    properties:
      member:
        $ref: '#/definitions/v1GroupMember'
    required:
      - member
  v1Account:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      isInMobileBeta:
        type: boolean
        title: On long term, should not put this in Account but in a separate database that only stores accounts ids that are in beta (for example) (too lazy too late rn)
    required:
      - id
      - name
      - email
  v1AuthenticateGoogleRequest:
    type: object
    properties:
      clientAccessToken:
        type: string
    required:
      - clientAccessToken
  v1AuthenticateGoogleResponse:
    type: object
    properties:
      token:
        type: string
    required:
      - token
  v1AuthenticateRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  v1AuthenticateResponse:
    type: object
    properties:
      token:
        type: string
    required:
      - token
  v1Block:
    type: object
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/v1BlockType'
      styles:
        type: array
        items:
          type: object
          $ref: '#/definitions/BlockTextStyle'
      heading:
        type: string
      paragraph:
        type: string
      numberPoint:
        type: string
      bulletPoint:
        type: string
      image:
        $ref: '#/definitions/v1BlockImage'
      code:
        $ref: '#/definitions/BlockCode'
      math:
        type: string
      thread:
        type: array
        items:
          type: object
          $ref: '#/definitions/BlockComment'
    required:
      - id
      - type
  v1BlockImage:
    type: object
    properties:
      url:
        type: string
      caption:
        type: string
  v1BlockType:
    type: string
    enum:
      - TYPE_HEADING_1
      - TYPE_HEADING_2
      - TYPE_HEADING_3
      - TYPE_PARAGRAPH
      - TYPE_MATH
      - TYPE_CODE
      - TYPE_BULLET_POINT
      - TYPE_NUMBER_POINT
      - TYPE_IMAGE
  v1ChangeNoteEditPermissionResponse:
    type: object
  v1ConversationMessage:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      conversationId:
        type: string
      senderAccountId:
        type: string
      content:
        type: string
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
    required:
      - id
      - groupId
      - conversationId
      - senderAccountId
      - content
      - createdAt
  v1CreateAccountRequest:
    type: object
    properties:
      password:
        type: string
      email:
        type: string
      name:
        type: string
    required:
      - password
      - email
      - name
  v1CreateAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
    required:
      - account
  v1CreateBlockCommentResponse:
    type: object
    properties:
      comment:
        $ref: '#/definitions/BlockComment'
  v1CreateGroupRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
      - description
  v1CreateGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
    required:
      - group
  v1CreateNoteResponse:
    type: object
    properties:
      note:
        $ref: '#/definitions/v1Note'
    required:
      - note
  v1CreateWorkspaceResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
    required:
      - group
  v1DefinitionWidget:
    type: object
    properties:
      word:
        type: string
      gender:
        type: string
      type:
        type: string
      content:
        type: string
    required:
      - word
      - content
  v1DeleteAccountResponse:
    type: object
  v1DeleteBlockCommentResponse:
    type: object
  v1DeleteBlockResponse:
    type: object
  v1DeleteConversationMessageResponse:
    type: object
  v1DeleteGroupResponse:
    type: object
  v1DeleteNoteResponse:
    type: object
  v1DenyInviteResponse:
    type: object
  v1EndStreamInvitesResponse:
    type: object
  v1ExportNoteResponse:
    type: object
    properties:
      file:
        type: string
        format: byte
    required:
      - file
  v1ExtractKeywordsBatchResponse:
    type: object
    properties:
      keywordsArray:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ExtractKeywordsResponse'
  v1ExtractKeywordsResponse:
    type: object
    properties:
      keywords:
        type: array
        items:
          type: string
  v1ForgetAccountPasswordRequest:
    type: object
    properties:
      email:
        type: string
    required:
      - email
  v1ForgetAccountPasswordResponse:
    type: object
    properties:
      accountId:
        type: string
      validUntil:
        type: string
    required:
      - accountId
      - validUntil
  v1ForgetAccountPasswordValidateTokenRequest:
    type: object
    properties:
      accountId:
        type: string
      token:
        type: string
    required:
      - accountId
      - token
  v1ForgetAccountPasswordValidateTokenResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
      resetToken:
        type: string
      authToken:
        type: string
    required:
      - account
      - resetToken
      - authToken
  v1GenerateInviteLinkResponse:
    type: object
    properties:
      inviteLink:
        $ref: '#/definitions/v1GroupInviteLink'
    required:
      - inviteLink
  v1GenerateQuizResponse:
    type: object
    properties:
      quiz:
        $ref: '#/definitions/v1Quiz'
  v1GenerateSummaryResponse:
    type: object
    properties:
      summary:
        type: string
  v1GenerateWidgetsResponse:
    type: object
    properties:
      widgets:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Widget'
    required:
      - widgets
  v1GetAccountProfilePictureResponse:
    type: object
    properties:
      accountId:
        type: string
      image:
        $ref: '#/definitions/accountsv1Image'
    required:
      - accountId
      - image
  v1GetAccountRequest:
    type: object
    properties:
      accountId:
        type: string
      email:
        type: string
  v1GetAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
    required:
      - account
  v1GetActivityResponse:
    type: object
    properties:
      activity:
        $ref: '#/definitions/v1GroupActivity'
    required:
      - activity
  v1GetConversationMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1ConversationMessage'
    required:
      - message
  v1GetConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1GroupConversation'
    required:
      - conversation
  v1GetGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
    required:
      - group
  v1GetInviteLinkResponse:
    type: object
    properties:
      inviteLink:
        $ref: '#/definitions/v1GroupInviteLink'
    required:
      - inviteLink
  v1GetInviteResponse:
    type: object
    properties:
      invite:
        $ref: '#/definitions/v1GroupInvite'
    required:
      - invite
  v1GetMailsFromIDsResponse:
    type: object
    properties:
      emails:
        type: array
        items:
          type: string
  v1GetMemberResponse:
    type: object
    properties:
      member:
        $ref: '#/definitions/v1GroupMember'
    required:
      - member
  v1GetNoteResponse:
    type: object
    properties:
      note:
        $ref: '#/definitions/v1Note'
    required:
      - note
  v1Group:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      workspaceAccountId:
        type: string
      avatarUrl:
        type: string
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
      members:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupMember'
      conversations:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupConversation'
      invites:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupInvite'
      inviteLinks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupInviteLink'
      activities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupActivity'
    required:
      - id
      - name
      - description
      - avatarUrl
      - createdAt
  v1GroupActivity:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      type:
        type: string
      event:
        type: string
      createdAt:
        type: string
        format: date-time
    required:
      - id
      - groupId
      - type
      - event
      - createdAt
  v1GroupConversation:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      createdAt:
        type: string
        format: date-time
    required:
      - id
      - name
      - createdAt
  v1GroupInvite:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      senderAccountId:
        type: string
      recipientAccountId:
        type: string
      createdAt:
        type: string
        format: date-time
      validUntil:
        type: string
        format: date-time
    required:
      - id
      - senderAccountId
      - recipientAccountId
      - createdAt
      - validUntil
  v1GroupInviteLink:
    type: object
    properties:
      code:
        type: string
      generatedByAccountId:
        type: string
      createdAt:
        type: string
        format: date-time
      validUntil:
        type: string
        format: date-time
    required:
      - code
      - generatedByAccountId
      - createdAt
      - validUntil
  v1GroupMember:
    type: object
    properties:
      accountId:
        type: string
      isAdmin:
        type: boolean
      joinedAt:
        type: string
        format: date-time
    required:
      - accountId
      - isAdmin
      - joinedAt
  v1HttpError:
    type: object
    properties:
      error:
        type: string
  v1ImageType:
    type: string
    enum:
      - TYPE_JPEG
      - TYPE_PNG
  v1ImageWidget:
    type: object
    properties:
      title:
        type: string
      url:
        type: string
      caption:
        type: string
    required:
      - title
      - url
  v1InsertBlockResponse:
    type: object
    properties:
      block:
        $ref: '#/definitions/v1Block'
    required:
      - block
  v1ListAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Account'
  v1ListActivitiesResponse:
    type: object
    properties:
      activities:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupActivity'
    required:
      - activities
  v1ListBlockCommentsResponse:
    type: object
    properties:
      comments:
        type: array
        items:
          type: object
          $ref: '#/definitions/BlockComment'
  v1ListConversationMessagesResponse:
    type: object
    properties:
      messages:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ConversationMessage'
  v1ListGroupsResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Group'
  v1ListInvitesResponse:
    type: object
    properties:
      invites:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupInvite'
  v1ListNotesResponse:
    type: object
    properties:
      notes:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Note'
  v1Note:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      authorAccountId:
        type: string
      title:
        type: string
      blocks:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Block'
      createdAt:
        type: string
        format: date-time
      modifiedAt:
        type: string
        format: date-time
      analyzedAt:
        type: string
        format: date-time
      lang:
        type: string
    required:
      - id
      - groupId
      - authorAccountId
      - title
      - createdAt
      - lang
  v1NoteExportFormat:
    type: string
    enum:
      - NOTE_EXPORT_FORMAT_MARKDOWN
      - NOTE_EXPORT_FORMAT_PDF
  v1OnAccountDeleteResponse:
    type: object
  v1Quiz:
    type: object
    properties:
      questions:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1QuizQuestion'
      id:
        type: string
  v1QuizQuestion:
    type: object
    properties:
      question:
        type: string
      answers:
        type: array
        items:
          type: string
      solutions:
        type: array
        items:
          type: string
  v1Recipient:
    type: object
    properties:
      accountId:
        type: string
  v1RegisterUserToMobileBetaRequest:
    type: object
    properties:
      accountId:
        type: string
    required:
      - accountId
  v1RegisterUserToMobileBetaResponse:
    type: object
  v1RemoveMemberResponse:
    type: object
  v1RevokeInviteLinkResponse:
    type: object
  v1RevokeInviteResponse:
    type: object
  v1SendConversationMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1ConversationMessage'
    required:
      - message
  v1SendEmailsResponse:
    type: object
  v1SendGroupInviteMailResponse:
    type: object
  v1SendInviteResponse:
    type: object
    properties:
      invite:
        $ref: '#/definitions/v1GroupInvite'
    required:
      - invite
  v1StreamInvitesResponse:
    type: object
    properties:
      invites:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1GroupInvite'
  v1SummarizeResponse:
    type: object
    properties:
      summary:
        type: string
        description: Small text output which summarizes the original entry.
  v1UpdateAccountPasswordResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
    required:
      - account
  v1UpdateAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
    required:
      - account
  v1UpdateBlockIndexResponse:
    type: object
    properties:
      block:
        $ref: '#/definitions/v1Block'
    required:
      - block
  v1UpdateBlockResponse:
    type: object
    properties:
      block:
        $ref: '#/definitions/v1Block'
    required:
      - block
  v1UpdateConversationMessageResponse:
    type: object
    properties:
      message:
        $ref: '#/definitions/v1ConversationMessage'
    required:
      - message
  v1UpdateConversationResponse:
    type: object
    properties:
      conversation:
        $ref: '#/definitions/v1GroupConversation'
    required:
      - conversation
  v1UpdateGroupResponse:
    type: object
    properties:
      group:
        $ref: '#/definitions/v1Group'
    required:
      - group
  v1UpdateMemberResponse:
    type: object
    properties:
      member:
        $ref: '#/definitions/v1GroupMember'
    required:
      - member
  v1UpdateNoteResponse:
    type: object
    properties:
      note:
        $ref: '#/definitions/v1Note'
    required:
      - note
  v1UploadAccountProfilePictureResponse:
    type: object
  v1UseInviteLinkResponse:
    type: object
  v1ValidateAccountResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/v1Account'
    required:
      - account
  v1WebsiteWidget:
    type: object
    properties:
      keyword:
        type: string
      type:
        type: string
      url:
        type: string
      summary:
        type: string
      imageUrl:
        type: string
    required:
      - keyword
      - type
      - url
  v1Widget:
    type: object
    properties:
      websiteWidget:
        $ref: '#/definitions/v1WebsiteWidget'
      imageWidget:
        $ref: '#/definitions/v1ImageWidget'
      definitionWidget:
        $ref: '#/definitions/v1DefinitionWidget'
security:
  - bearerAuth: []
