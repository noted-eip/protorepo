// @generated by protoc-gen-es v1.0.0
// @generated from file noted/notes/v1/notes.proto (package noted.notes.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum noted.notes.v1.NoteExportFormat
 */
export declare enum NoteExportFormat {
  /**
   * @generated from enum value: NOTE_EXPORT_FORMAT_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: NOTE_EXPORT_FORMAT_MARKDOWN = 1;
   */
  MARKDOWN = 1,

  /**
   * @generated from enum value: NOTE_EXPORT_FORMAT_PDF = 2;
   */
  PDF = 2,
}

/**
 * @generated from message noted.notes.v1.Note
 */
export declare class Note extends Message<Note> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * @generated from field: string author_account_id = 3;
   */
  authorAccountId: string;

  /**
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * @generated from field: repeated noted.notes.v1.Block blocks = 5;
   */
  blocks: Block[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp modified_at = 7;
   */
  modifiedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp analyzed_at = 8;
   */
  analyzedAt?: Timestamp;

  constructor(data?: PartialMessage<Note>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.Note";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Note;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Note;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Note;

  static equals(a: Note | PlainMessage<Note> | undefined, b: Note | PlainMessage<Note> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.Block
 */
export declare class Block extends Message<Block> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: noted.notes.v1.Block.Type type = 2;
   */
  type: Block_Type;

  /**
   * @generated from oneof noted.notes.v1.Block.data
   */
  data: {
    /**
     * @generated from field: string heading = 3;
     */
    value: string;
    case: "heading";
  } | {
    /**
     * @generated from field: string paragraph = 4;
     */
    value: string;
    case: "paragraph";
  } | {
    /**
     * @generated from field: string number_point = 5;
     */
    value: string;
    case: "numberPoint";
  } | {
    /**
     * @generated from field: string bullet_point = 6;
     */
    value: string;
    case: "bulletPoint";
  } | {
    /**
     * @generated from field: noted.notes.v1.Block.Image image = 16;
     */
    value: Block_Image;
    case: "image";
  } | {
    /**
     * @generated from field: noted.notes.v1.Block.Code code = 17;
     */
    value: Block_Code;
    case: "code";
  } | {
    /**
     * @generated from field: string math = 18;
     */
    value: string;
    case: "math";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Block>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.Block";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Block;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Block;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Block;

  static equals(a: Block | PlainMessage<Block> | undefined, b: Block | PlainMessage<Block> | undefined): boolean;
}

/**
 * @generated from enum noted.notes.v1.Block.Type
 */
export declare enum Block_Type {
  /**
   * @generated from enum value: TYPE_INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: TYPE_HEADING_1 = 1;
   */
  HEADING_1 = 1,

  /**
   * @generated from enum value: TYPE_HEADING_2 = 2;
   */
  HEADING_2 = 2,

  /**
   * @generated from enum value: TYPE_HEADING_3 = 3;
   */
  HEADING_3 = 3,

  /**
   * @generated from enum value: TYPE_PARAGRAPH = 4;
   */
  PARAGRAPH = 4,

  /**
   * @generated from enum value: TYPE_MATH = 5;
   */
  MATH = 5,

  /**
   * @generated from enum value: TYPE_CODE = 6;
   */
  CODE = 6,

  /**
   * @generated from enum value: TYPE_BULLET_POINT = 7;
   */
  BULLET_POINT = 7,

  /**
   * @generated from enum value: TYPE_NUMBER_POINT = 8;
   */
  NUMBER_POINT = 8,

  /**
   * @generated from enum value: TYPE_IMAGE = 9;
   */
  IMAGE = 9,
}

/**
 * @generated from message noted.notes.v1.Block.Code
 */
export declare class Block_Code extends Message<Block_Code> {
  /**
   * @generated from field: string snippet = 1;
   */
  snippet: string;

  /**
   * @generated from field: string lang = 2;
   */
  lang: string;

  constructor(data?: PartialMessage<Block_Code>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.Block.Code";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Block_Code;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Block_Code;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Block_Code;

  static equals(a: Block_Code | PlainMessage<Block_Code> | undefined, b: Block_Code | PlainMessage<Block_Code> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.Block.Image
 */
export declare class Block_Image extends Message<Block_Image> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: string caption = 2;
   */
  caption: string;

  constructor(data?: PartialMessage<Block_Image>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.Block.Image";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Block_Image;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Block_Image;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Block_Image;

  static equals(a: Block_Image | PlainMessage<Block_Image> | undefined, b: Block_Image | PlainMessage<Block_Image> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetNoteRequest
 */
export declare class GetNoteRequest extends Message<GetNoteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  constructor(data?: PartialMessage<GetNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNoteRequest;

  static equals(a: GetNoteRequest | PlainMessage<GetNoteRequest> | undefined, b: GetNoteRequest | PlainMessage<GetNoteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetNoteResponse
 */
export declare class GetNoteResponse extends Message<GetNoteResponse> {
  /**
   * @generated from field: noted.notes.v1.Note note = 1;
   */
  note?: Note;

  constructor(data?: PartialMessage<GetNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNoteResponse;

  static equals(a: GetNoteResponse | PlainMessage<GetNoteResponse> | undefined, b: GetNoteResponse | PlainMessage<GetNoteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.CreateNoteRequest
 */
export declare class CreateNoteRequest extends Message<CreateNoteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: repeated noted.notes.v1.Block blocks = 3;
   */
  blocks: Block[];

  constructor(data?: PartialMessage<CreateNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.CreateNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNoteRequest;

  static equals(a: CreateNoteRequest | PlainMessage<CreateNoteRequest> | undefined, b: CreateNoteRequest | PlainMessage<CreateNoteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.CreateNoteResponse
 */
export declare class CreateNoteResponse extends Message<CreateNoteResponse> {
  /**
   * @generated from field: noted.notes.v1.Note note = 1;
   */
  note?: Note;

  constructor(data?: PartialMessage<CreateNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.CreateNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNoteResponse;

  static equals(a: CreateNoteResponse | PlainMessage<CreateNoteResponse> | undefined, b: CreateNoteResponse | PlainMessage<CreateNoteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateNoteRequest
 */
export declare class UpdateNoteRequest extends Message<UpdateNoteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: noted.notes.v1.Note note = 3;
   */
  note?: Note;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNoteRequest;

  static equals(a: UpdateNoteRequest | PlainMessage<UpdateNoteRequest> | undefined, b: UpdateNoteRequest | PlainMessage<UpdateNoteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateNoteResponse
 */
export declare class UpdateNoteResponse extends Message<UpdateNoteResponse> {
  /**
   * @generated from field: noted.notes.v1.Note note = 1;
   */
  note?: Note;

  constructor(data?: PartialMessage<UpdateNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNoteResponse;

  static equals(a: UpdateNoteResponse | PlainMessage<UpdateNoteResponse> | undefined, b: UpdateNoteResponse | PlainMessage<UpdateNoteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteNoteRequest
 */
export declare class DeleteNoteRequest extends Message<DeleteNoteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  constructor(data?: PartialMessage<DeleteNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteNoteRequest;

  static equals(a: DeleteNoteRequest | PlainMessage<DeleteNoteRequest> | undefined, b: DeleteNoteRequest | PlainMessage<DeleteNoteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteNoteResponse
 */
export declare class DeleteNoteResponse extends Message<DeleteNoteResponse> {
  constructor(data?: PartialMessage<DeleteNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteNoteResponse;

  static equals(a: DeleteNoteResponse | PlainMessage<DeleteNoteResponse> | undefined, b: DeleteNoteResponse | PlainMessage<DeleteNoteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListNotesRequest
 */
export declare class ListNotesRequest extends Message<ListNotesRequest> {
  /**
   * @generated from field: string author_account_id = 1;
   */
  authorAccountId: string;

  /**
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  constructor(data?: PartialMessage<ListNotesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListNotesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotesRequest;

  static equals(a: ListNotesRequest | PlainMessage<ListNotesRequest> | undefined, b: ListNotesRequest | PlainMessage<ListNotesRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListNotesResponse
 */
export declare class ListNotesResponse extends Message<ListNotesResponse> {
  /**
   * @generated from field: repeated noted.notes.v1.Note notes = 1;
   */
  notes: Note[];

  constructor(data?: PartialMessage<ListNotesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListNotesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotesResponse;

  static equals(a: ListNotesResponse | PlainMessage<ListNotesResponse> | undefined, b: ListNotesResponse | PlainMessage<ListNotesResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.InsertBlockRequest
 */
export declare class InsertBlockRequest extends Message<InsertBlockRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: uint32 index = 3;
   */
  index: number;

  /**
   * @generated from field: noted.notes.v1.Block block = 4;
   */
  block?: Block;

  constructor(data?: PartialMessage<InsertBlockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.InsertBlockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertBlockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertBlockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertBlockRequest;

  static equals(a: InsertBlockRequest | PlainMessage<InsertBlockRequest> | undefined, b: InsertBlockRequest | PlainMessage<InsertBlockRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.InsertBlockResponse
 */
export declare class InsertBlockResponse extends Message<InsertBlockResponse> {
  /**
   * @generated from field: noted.notes.v1.Block block = 1;
   */
  block?: Block;

  constructor(data?: PartialMessage<InsertBlockResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.InsertBlockResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsertBlockResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsertBlockResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsertBlockResponse;

  static equals(a: InsertBlockResponse | PlainMessage<InsertBlockResponse> | undefined, b: InsertBlockResponse | PlainMessage<InsertBlockResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateBlockRequest
 */
export declare class UpdateBlockRequest extends Message<UpdateBlockRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: string block_id = 3;
   */
  blockId: string;

  /**
   * @generated from field: noted.notes.v1.Block block = 4;
   */
  block?: Block;

  constructor(data?: PartialMessage<UpdateBlockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateBlockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBlockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBlockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBlockRequest;

  static equals(a: UpdateBlockRequest | PlainMessage<UpdateBlockRequest> | undefined, b: UpdateBlockRequest | PlainMessage<UpdateBlockRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateBlockResponse
 */
export declare class UpdateBlockResponse extends Message<UpdateBlockResponse> {
  /**
   * @generated from field: noted.notes.v1.Block block = 1;
   */
  block?: Block;

  constructor(data?: PartialMessage<UpdateBlockResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateBlockResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBlockResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBlockResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBlockResponse;

  static equals(a: UpdateBlockResponse | PlainMessage<UpdateBlockResponse> | undefined, b: UpdateBlockResponse | PlainMessage<UpdateBlockResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteBlockRequest
 */
export declare class DeleteBlockRequest extends Message<DeleteBlockRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: string block_id = 3;
   */
  blockId: string;

  constructor(data?: PartialMessage<DeleteBlockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteBlockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBlockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBlockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBlockRequest;

  static equals(a: DeleteBlockRequest | PlainMessage<DeleteBlockRequest> | undefined, b: DeleteBlockRequest | PlainMessage<DeleteBlockRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteBlockResponse
 */
export declare class DeleteBlockResponse extends Message<DeleteBlockResponse> {
  constructor(data?: PartialMessage<DeleteBlockResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteBlockResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteBlockResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteBlockResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteBlockResponse;

  static equals(a: DeleteBlockResponse | PlainMessage<DeleteBlockResponse> | undefined, b: DeleteBlockResponse | PlainMessage<DeleteBlockResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ExportNoteRequest
 */
export declare class ExportNoteRequest extends Message<ExportNoteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string note_id = 2;
   */
  noteId: string;

  /**
   * @generated from field: noted.notes.v1.NoteExportFormat export_format = 3;
   */
  exportFormat: NoteExportFormat;

  constructor(data?: PartialMessage<ExportNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ExportNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportNoteRequest;

  static equals(a: ExportNoteRequest | PlainMessage<ExportNoteRequest> | undefined, b: ExportNoteRequest | PlainMessage<ExportNoteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ExportNoteResponse
 */
export declare class ExportNoteResponse extends Message<ExportNoteResponse> {
  /**
   * @generated from field: bytes file = 1;
   */
  file: Uint8Array;

  constructor(data?: PartialMessage<ExportNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ExportNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportNoteResponse;

  static equals(a: ExportNoteResponse | PlainMessage<ExportNoteResponse> | undefined, b: ExportNoteResponse | PlainMessage<ExportNoteResponse> | undefined): boolean;
}

