# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from noted.notes.v1 import groups_pb2 as noted_dot_notes_dot_v1_dot_groups__pb2


class GroupsAPIStub(object):
    """Creation, read/update, deletion of groups of users.
    Addition and removal of group members with roles.
    Management of notes and folders within a group.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateGroup = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/CreateGroup',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateGroupRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateGroupResponse.FromString,
                )
        self.CreateWorkspace = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/CreateWorkspace',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateWorkspaceRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateWorkspaceResponse.FromString,
                )
        self.GetGroup = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GetGroup',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetGroupRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetGroupResponse.FromString,
                )
        self.UpdateGroup = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/UpdateGroup',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateGroupRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateGroupResponse.FromString,
                )
        self.DeleteGroup = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/DeleteGroup',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteGroupRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteGroupResponse.FromString,
                )
        self.ListGroups = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/ListGroups',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListGroupsRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListGroupsResponse.FromString,
                )
        self.GetMember = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GetMember',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetMemberRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetMemberResponse.FromString,
                )
        self.UpdateMember = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/UpdateMember',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateMemberRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateMemberResponse.FromString,
                )
        self.RemoveMember = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/RemoveMember',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.RemoveMemberRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.RemoveMemberResponse.FromString,
                )
        self.GetConversation = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GetConversation',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationResponse.FromString,
                )
        self.UpdateConversation = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/UpdateConversation',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationResponse.FromString,
                )
        self.SendConversationMessage = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/SendConversationMessage',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendConversationMessageRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendConversationMessageResponse.FromString,
                )
        self.GetConversationMessage = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GetConversationMessage',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationMessageRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationMessageResponse.FromString,
                )
        self.UpdateConversationMessage = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/UpdateConversationMessage',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationMessageRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationMessageResponse.FromString,
                )
        self.DeleteConversationMessage = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/DeleteConversationMessage',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteConversationMessageRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteConversationMessageResponse.FromString,
                )
        self.ListConversationMessages = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/ListConversationMessages',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListConversationMessagesRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListConversationMessagesResponse.FromString,
                )
        self.GenerateInviteLink = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GenerateInviteLink',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GenerateInviteLinkRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GenerateInviteLinkResponse.FromString,
                )
        self.GetInviteLink = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GetInviteLink',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteLinkRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteLinkResponse.FromString,
                )
        self.RevokeInviteLink = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/RevokeInviteLink',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteLinkRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteLinkResponse.FromString,
                )
        self.UseInviteLink = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/UseInviteLink',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UseInviteLinkRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UseInviteLinkResponse.FromString,
                )
        self.SendInvite = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/SendInvite',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendInviteRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendInviteResponse.FromString,
                )
        self.GetInvite = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/GetInvite',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteResponse.FromString,
                )
        self.AcceptInvite = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/AcceptInvite',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.AcceptInviteRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.AcceptInviteResponse.FromString,
                )
        self.DenyInvite = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/DenyInvite',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.DenyInviteRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.DenyInviteResponse.FromString,
                )
        self.RevokeInvite = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/RevokeInvite',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteResponse.FromString,
                )
        self.ListInvites = channel.unary_unary(
                '/noted.notes.v1.GroupsAPI/ListInvites',
                request_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListInvitesRequest.SerializeToString,
                response_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListInvitesResponse.FromString,
                )


class GroupsAPIServicer(object):
    """Creation, read/update, deletion of groups of users.
    Addition and removal of group members with roles.
    Management of notes and folders within a group.
    """

    def CreateGroup(self, request, context):
        """Creates a group with a single administrator member (the authenticated user).
        Must be authenticated.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWorkspace(self, request, context):
        """Internal endpoint. Called upon account creation.
        Creates a workspace for the caller.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroup(self, request, context):
        """Must be group member.
        If the caller is not a member but has been invited to the group or has
        an invite code link, it will access a limited view of the group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGroup(self, request, context):
        """Must be group administrator.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteGroup(self, request, context):
        """Must be group administrator.
        Deletes all the associated resources (members, notes).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGroups(self, request, context):
        """Must be group member. Returns only the non-array fields of a group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMember(self, request, context):
        """Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMember(self, request, context):
        """Must be group administrator. Can only update `role`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveMember(self, request, context):
        """Must be group administrator or the authenticated user removing itself from
        the group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversation(self, request, context):
        """Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConversation(self, request, context):
        """Must be group admin. Can only update `title`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendConversationMessage(self, request, context):
        """Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversationMessage(self, request, context):
        """Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConversationMessage(self, request, context):
        """Must be sender. Can only update `content`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConversationMessage(self, request, context):
        """Must be sender or group admin.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConversationMessages(self, request, context):
        """Must be group member. Messages are sorted in reverse chronological order.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateInviteLink(self, request, context):
        """Must be group member. generated_by_account_id defaults to the authenticated user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInviteLink(self, request, context):
        """Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeInviteLink(self, request, context):
        """Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseInviteLink(self, request, context):
        """Must not be group member. Makes the authenticated join the group on success.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendInvite(self, request, context):
        """The sender defaults to the authenticated user. Must be group member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInvite(self, request, context):
        """Must be group administrator or sender or recipient.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptInvite(self, request, context):
        """Must be recipient. Accepting an invitation automatically adds the
        recipient to the group and deletes the invite.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DenyInvite(self, request, context):
        """Must be recipient. Deletes the invitation without making the
        recipient join the group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeInvite(self, request, context):
        """Must be group administrator or sender. Deletes the invitation without
        making the recipient join the group.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInvites(self, request, context):
        """Must be group administrator or sender or recipient.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GroupsAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGroup,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateGroupRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateGroupResponse.SerializeToString,
            ),
            'CreateWorkspace': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorkspace,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateWorkspaceRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.CreateWorkspaceResponse.SerializeToString,
            ),
            'GetGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroup,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetGroupRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetGroupResponse.SerializeToString,
            ),
            'UpdateGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGroup,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateGroupRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateGroupResponse.SerializeToString,
            ),
            'DeleteGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteGroup,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteGroupRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteGroupResponse.SerializeToString,
            ),
            'ListGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGroups,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListGroupsRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListGroupsResponse.SerializeToString,
            ),
            'GetMember': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMember,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetMemberRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetMemberResponse.SerializeToString,
            ),
            'UpdateMember': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMember,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateMemberRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateMemberResponse.SerializeToString,
            ),
            'RemoveMember': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveMember,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.RemoveMemberRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.RemoveMemberResponse.SerializeToString,
            ),
            'GetConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversation,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationResponse.SerializeToString,
            ),
            'UpdateConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConversation,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationResponse.SerializeToString,
            ),
            'SendConversationMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendConversationMessage,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendConversationMessageRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendConversationMessageResponse.SerializeToString,
            ),
            'GetConversationMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversationMessage,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationMessageRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationMessageResponse.SerializeToString,
            ),
            'UpdateConversationMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConversationMessage,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationMessageRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationMessageResponse.SerializeToString,
            ),
            'DeleteConversationMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConversationMessage,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteConversationMessageRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.DeleteConversationMessageResponse.SerializeToString,
            ),
            'ListConversationMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversationMessages,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListConversationMessagesRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListConversationMessagesResponse.SerializeToString,
            ),
            'GenerateInviteLink': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateInviteLink,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GenerateInviteLinkRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GenerateInviteLinkResponse.SerializeToString,
            ),
            'GetInviteLink': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInviteLink,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteLinkRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteLinkResponse.SerializeToString,
            ),
            'RevokeInviteLink': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeInviteLink,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteLinkRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteLinkResponse.SerializeToString,
            ),
            'UseInviteLink': grpc.unary_unary_rpc_method_handler(
                    servicer.UseInviteLink,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.UseInviteLinkRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.UseInviteLinkResponse.SerializeToString,
            ),
            'SendInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.SendInvite,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendInviteRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.SendInviteResponse.SerializeToString,
            ),
            'GetInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvite,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteResponse.SerializeToString,
            ),
            'AcceptInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptInvite,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.AcceptInviteRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.AcceptInviteResponse.SerializeToString,
            ),
            'DenyInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.DenyInvite,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.DenyInviteRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.DenyInviteResponse.SerializeToString,
            ),
            'RevokeInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeInvite,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteResponse.SerializeToString,
            ),
            'ListInvites': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInvites,
                    request_deserializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListInvitesRequest.FromString,
                    response_serializer=noted_dot_notes_dot_v1_dot_groups__pb2.ListInvitesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'noted.notes.v1.GroupsAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GroupsAPI(object):
    """Creation, read/update, deletion of groups of users.
    Addition and removal of group members with roles.
    Management of notes and folders within a group.
    """

    @staticmethod
    def CreateGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/CreateGroup',
            noted_dot_notes_dot_v1_dot_groups__pb2.CreateGroupRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.CreateGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWorkspace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/CreateWorkspace',
            noted_dot_notes_dot_v1_dot_groups__pb2.CreateWorkspaceRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.CreateWorkspaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GetGroup',
            noted_dot_notes_dot_v1_dot_groups__pb2.GetGroupRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GetGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/UpdateGroup',
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateGroupRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/DeleteGroup',
            noted_dot_notes_dot_v1_dot_groups__pb2.DeleteGroupRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.DeleteGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/ListGroups',
            noted_dot_notes_dot_v1_dot_groups__pb2.ListGroupsRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.ListGroupsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GetMember',
            noted_dot_notes_dot_v1_dot_groups__pb2.GetMemberRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GetMemberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/UpdateMember',
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateMemberRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateMemberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/RemoveMember',
            noted_dot_notes_dot_v1_dot_groups__pb2.RemoveMemberRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.RemoveMemberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GetConversation',
            noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/UpdateConversation',
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendConversationMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/SendConversationMessage',
            noted_dot_notes_dot_v1_dot_groups__pb2.SendConversationMessageRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.SendConversationMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConversationMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GetConversationMessage',
            noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationMessageRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GetConversationMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConversationMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/UpdateConversationMessage',
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationMessageRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.UpdateConversationMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConversationMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/DeleteConversationMessage',
            noted_dot_notes_dot_v1_dot_groups__pb2.DeleteConversationMessageRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.DeleteConversationMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConversationMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/ListConversationMessages',
            noted_dot_notes_dot_v1_dot_groups__pb2.ListConversationMessagesRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.ListConversationMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateInviteLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GenerateInviteLink',
            noted_dot_notes_dot_v1_dot_groups__pb2.GenerateInviteLinkRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GenerateInviteLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInviteLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GetInviteLink',
            noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteLinkRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeInviteLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/RevokeInviteLink',
            noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteLinkRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UseInviteLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/UseInviteLink',
            noted_dot_notes_dot_v1_dot_groups__pb2.UseInviteLinkRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.UseInviteLinkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/SendInvite',
            noted_dot_notes_dot_v1_dot_groups__pb2.SendInviteRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.SendInviteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/GetInvite',
            noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.GetInviteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/AcceptInvite',
            noted_dot_notes_dot_v1_dot_groups__pb2.AcceptInviteRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.AcceptInviteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DenyInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/DenyInvite',
            noted_dot_notes_dot_v1_dot_groups__pb2.DenyInviteRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.DenyInviteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/RevokeInvite',
            noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.RevokeInviteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInvites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/noted.notes.v1.GroupsAPI/ListInvites',
            noted_dot_notes_dot_v1_dot_groups__pb2.ListInvitesRequest.SerializeToString,
            noted_dot_notes_dot_v1_dot_groups__pb2.ListInvitesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
