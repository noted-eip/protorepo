syntax = "proto3";

package noted.notes.v1;

option go_package = "noted/notes/v1";

import "google/protobuf/field_mask.proto";

message Notes {
    repeated Note notes = 1;
}

message Note {
    string id = 1;
    string author_id = 2;
    string title = 3;
    repeated Block blocks = 4;
}

message Block {
    enum Type {
        TYPE_INVALID = 0;
        TYPE_HEADING_1 = 1;
        TYPE_HEADING_2 = 2;
        TYPE_HEADING_3 = 3;
        TYPE_PARAGRAPH = 4;
    }
    string id = 1;
    Type type = 2;
    string contents = 3;
}

service NotesAPI {
    rpc GetNote(GetNoteRequest) returns (GetNoteResponse) {}
    rpc CreateNote(CreateNoteRequest) returns (CreateNoteResponse) {}
    rpc UpdateNote(UpdateNoteRequest) returns (UpdateNoteResponse) {}
    rpc DeleteNote(DeleteNoteRequest) returns (DeleteNoteResponse) {}
    rpc ListNotes(ListNotesRequest) returns (ListNotesResponse) {}
    rpc InsertBlock(InsertBlockRequest) returns (InsertBlockResponse) {}
    rpc UpdateBlock(UpdateBlockRequest) returns (UpdateBlockResponse) {}
    rpc DeleteBlock(DeleteBlockRequest) returns (DeleteBlockResponse) {}
}

message GetNoteRequest {
    string id = 1;
}

message GetNoteResponse {
    Note note = 1;
}

message CreateNoteRequest {
    Note note = 1;
}

message CreateNoteResponse {
    Note note = 1;
}

message UpdateNoteRequest {
    string id = 1;
    Note note = 2;
    google.protobuf.FieldMask update_mask = 3;
}

message UpdateNoteResponse {
}

message DeleteNoteRequest {
    string id = 1;
}

message DeleteNoteResponse {
}

message ListNotesRequest {
    string author_id = 1;
}

message ListNotesResponse {
    repeated Note notes = 1;
}

message InsertBlockRequest {
    // The block to append to the note.
    Block block = 1;
    // Given that a note is an array of blocks, provide the index at
    // which the block shall be inserted.
    uint32 index = 2;
}

message InsertBlockResponse {
    Block block = 1;
}

message UpdateBlockRequest {
    string id = 1;
    Block block = 2;
    google.protobuf.FieldMask update_mask = 3;
}

message UpdateBlockResponse {
    Block block = 1;
}

message DeleteBlockRequest {
    string id = 1;
}

message DeleteBlockResponse {
}
