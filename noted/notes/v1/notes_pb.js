// @generated by protoc-gen-es v1.0.0
// @generated from file noted/notes/v1/notes.proto (package noted.notes.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum noted.notes.v1.NoteExportFormat
 */
export const NoteExportFormat = proto3.makeEnum(
  "noted.notes.v1.NoteExportFormat",
  [
    {no: 0, name: "NOTE_EXPORT_FORMAT_INVALID", localName: "INVALID"},
    {no: 1, name: "NOTE_EXPORT_FORMAT_MARKDOWN", localName: "MARKDOWN"},
    {no: 2, name: "NOTE_EXPORT_FORMAT_PDF", localName: "PDF"},
  ],
);

/**
 * @generated from message noted.notes.v1.Note
 */
export const Note = proto3.makeMessageType(
  "noted.notes.v1.Note",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "author_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "blocks", kind: "message", T: Block, repeated: true },
    { no: 6, name: "created_at", kind: "message", T: Timestamp },
    { no: 7, name: "modified_at", kind: "message", T: Timestamp },
    { no: 8, name: "analyzed_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message noted.notes.v1.Block
 */
export const Block = proto3.makeMessageType(
  "noted.notes.v1.Block",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(Block_Type) },
    { no: 3, name: "heading", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "data" },
    { no: 4, name: "paragraph", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "data" },
    { no: 5, name: "number_point", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "data" },
    { no: 6, name: "bullet_point", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "data" },
    { no: 16, name: "image", kind: "message", T: Block_Image, oneof: "data" },
    { no: 17, name: "code", kind: "message", T: Block_Code, oneof: "data" },
    { no: 18, name: "math", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "data" },
  ],
);

/**
 * @generated from enum noted.notes.v1.Block.Type
 */
export const Block_Type = proto3.makeEnum(
  "noted.notes.v1.Block.Type",
  [
    {no: 0, name: "TYPE_INVALID", localName: "INVALID"},
    {no: 1, name: "TYPE_HEADING_1", localName: "HEADING_1"},
    {no: 2, name: "TYPE_HEADING_2", localName: "HEADING_2"},
    {no: 3, name: "TYPE_HEADING_3", localName: "HEADING_3"},
    {no: 4, name: "TYPE_PARAGRAPH", localName: "PARAGRAPH"},
    {no: 5, name: "TYPE_MATH", localName: "MATH"},
    {no: 6, name: "TYPE_CODE", localName: "CODE"},
    {no: 7, name: "TYPE_BULLET_POINT", localName: "BULLET_POINT"},
    {no: 8, name: "TYPE_NUMBER_POINT", localName: "NUMBER_POINT"},
    {no: 9, name: "TYPE_IMAGE", localName: "IMAGE"},
  ],
);

/**
 * @generated from message noted.notes.v1.Block.Code
 */
export const Block_Code = proto3.makeMessageType(
  "noted.notes.v1.Block.Code",
  () => [
    { no: 1, name: "snippet", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "lang", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Block_Code"},
);

/**
 * @generated from message noted.notes.v1.Block.Image
 */
export const Block_Image = proto3.makeMessageType(
  "noted.notes.v1.Block.Image",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "caption", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Block_Image"},
);

/**
 * @generated from message noted.notes.v1.GetNoteRequest
 */
export const GetNoteRequest = proto3.makeMessageType(
  "noted.notes.v1.GetNoteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetNoteResponse
 */
export const GetNoteResponse = proto3.makeMessageType(
  "noted.notes.v1.GetNoteResponse",
  () => [
    { no: 1, name: "note", kind: "message", T: Note },
  ],
);

/**
 * @generated from message noted.notes.v1.CreateNoteRequest
 */
export const CreateNoteRequest = proto3.makeMessageType(
  "noted.notes.v1.CreateNoteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "blocks", kind: "message", T: Block, repeated: true },
  ],
);

/**
 * @generated from message noted.notes.v1.CreateNoteResponse
 */
export const CreateNoteResponse = proto3.makeMessageType(
  "noted.notes.v1.CreateNoteResponse",
  () => [
    { no: 1, name: "note", kind: "message", T: Note },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateNoteRequest
 */
export const UpdateNoteRequest = proto3.makeMessageType(
  "noted.notes.v1.UpdateNoteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "note", kind: "message", T: Note },
    { no: 4, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateNoteResponse
 */
export const UpdateNoteResponse = proto3.makeMessageType(
  "noted.notes.v1.UpdateNoteResponse",
  () => [
    { no: 1, name: "note", kind: "message", T: Note },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteNoteRequest
 */
export const DeleteNoteRequest = proto3.makeMessageType(
  "noted.notes.v1.DeleteNoteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteNoteResponse
 */
export const DeleteNoteResponse = proto3.makeMessageType(
  "noted.notes.v1.DeleteNoteResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.ListNotesRequest
 */
export const ListNotesRequest = proto3.makeMessageType(
  "noted.notes.v1.ListNotesRequest",
  () => [
    { no: 1, name: "author_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.ListNotesResponse
 */
export const ListNotesResponse = proto3.makeMessageType(
  "noted.notes.v1.ListNotesResponse",
  () => [
    { no: 1, name: "notes", kind: "message", T: Note, repeated: true },
  ],
);

/**
 * @generated from message noted.notes.v1.InsertBlockRequest
 */
export const InsertBlockRequest = proto3.makeMessageType(
  "noted.notes.v1.InsertBlockRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "block", kind: "message", T: Block },
  ],
);

/**
 * @generated from message noted.notes.v1.InsertBlockResponse
 */
export const InsertBlockResponse = proto3.makeMessageType(
  "noted.notes.v1.InsertBlockResponse",
  () => [
    { no: 1, name: "block", kind: "message", T: Block },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateBlockRequest
 */
export const UpdateBlockRequest = proto3.makeMessageType(
  "noted.notes.v1.UpdateBlockRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "block_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "block", kind: "message", T: Block },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateBlockResponse
 */
export const UpdateBlockResponse = proto3.makeMessageType(
  "noted.notes.v1.UpdateBlockResponse",
  () => [
    { no: 1, name: "block", kind: "message", T: Block },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteBlockRequest
 */
export const DeleteBlockRequest = proto3.makeMessageType(
  "noted.notes.v1.DeleteBlockRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "block_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteBlockResponse
 */
export const DeleteBlockResponse = proto3.makeMessageType(
  "noted.notes.v1.DeleteBlockResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.ExportNoteRequest
 */
export const ExportNoteRequest = proto3.makeMessageType(
  "noted.notes.v1.ExportNoteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "note_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "export_format", kind: "enum", T: proto3.getEnumType(NoteExportFormat) },
  ],
);

/**
 * @generated from message noted.notes.v1.ExportNoteResponse
 */
export const ExportNoteResponse = proto3.makeMessageType(
  "noted.notes.v1.ExportNoteResponse",
  () => [
    { no: 1, name: "file", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

