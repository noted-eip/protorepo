// @generated by protoc-gen-es v1.0.0
// @generated from file noted/notes/v1/groups.proto (package noted.notes.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message noted.notes.v1.ConversationMessage
 */
export const ConversationMessage = proto3.makeMessageType(
  "noted.notes.v1.ConversationMessage",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sender_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "message", T: Timestamp },
    { no: 7, name: "modified_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message noted.notes.v1.GroupConversation
 */
export const GroupConversation = proto3.makeMessageType(
  "noted.notes.v1.GroupConversation",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message noted.notes.v1.GroupMember
 */
export const GroupMember = proto3.makeMessageType(
  "noted.notes.v1.GroupMember",
  () => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is_admin", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "joined_at", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message noted.notes.v1.GroupInvite
 */
export const GroupInvite = proto3.makeMessageType(
  "noted.notes.v1.GroupInvite",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sender_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "recipient_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "valid_until", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message noted.notes.v1.GroupInviteLink
 */
export const GroupInviteLink = proto3.makeMessageType(
  "noted.notes.v1.GroupInviteLink",
  () => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "generated_by_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "created_at", kind: "message", T: Timestamp },
    { no: 4, name: "valid_until", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message noted.notes.v1.Group
 */
export const Group = proto3.makeMessageType(
  "noted.notes.v1.Group",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "workspace_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "avatar_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "created_at", kind: "message", T: Timestamp },
    { no: 7, name: "modified_at", kind: "message", T: Timestamp },
    { no: 8, name: "members", kind: "message", T: GroupMember, repeated: true },
    { no: 9, name: "conversations", kind: "message", T: GroupConversation, repeated: true },
    { no: 10, name: "invites", kind: "message", T: GroupInvite, repeated: true },
    { no: 11, name: "invite_links", kind: "message", T: GroupInviteLink, repeated: true },
  ],
);

/**
 * @generated from message noted.notes.v1.CreateGroupRequest
 */
export const CreateGroupRequest = proto3.makeMessageType(
  "noted.notes.v1.CreateGroupRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.CreateGroupResponse
 */
export const CreateGroupResponse = proto3.makeMessageType(
  "noted.notes.v1.CreateGroupResponse",
  () => [
    { no: 1, name: "group", kind: "message", T: Group },
  ],
);

/**
 * @generated from message noted.notes.v1.CreateWorkspaceRequest
 */
export const CreateWorkspaceRequest = proto3.makeMessageType(
  "noted.notes.v1.CreateWorkspaceRequest",
  [],
);

/**
 * @generated from message noted.notes.v1.CreateWorkspaceResponse
 */
export const CreateWorkspaceResponse = proto3.makeMessageType(
  "noted.notes.v1.CreateWorkspaceResponse",
  () => [
    { no: 1, name: "group", kind: "message", T: Group },
  ],
);

/**
 * @generated from message noted.notes.v1.GetGroupRequest
 */
export const GetGroupRequest = proto3.makeMessageType(
  "noted.notes.v1.GetGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_link_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetGroupResponse
 */
export const GetGroupResponse = proto3.makeMessageType(
  "noted.notes.v1.GetGroupResponse",
  () => [
    { no: 1, name: "group", kind: "message", T: Group },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteGroupRequest
 */
export const DeleteGroupRequest = proto3.makeMessageType(
  "noted.notes.v1.DeleteGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteGroupResponse
 */
export const DeleteGroupResponse = proto3.makeMessageType(
  "noted.notes.v1.DeleteGroupResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.UpdateGroupRequest
 */
export const UpdateGroupRequest = proto3.makeMessageType(
  "noted.notes.v1.UpdateGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateGroupResponse
 */
export const UpdateGroupResponse = proto3.makeMessageType(
  "noted.notes.v1.UpdateGroupResponse",
  () => [
    { no: 1, name: "group", kind: "message", T: Group },
  ],
);

/**
 * @generated from message noted.notes.v1.ListGroupsRequest
 */
export const ListGroupsRequest = proto3.makeMessageType(
  "noted.notes.v1.ListGroupsRequest",
  () => [
    { no: 1, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.ListGroupsResponse
 */
export const ListGroupsResponse = proto3.makeMessageType(
  "noted.notes.v1.ListGroupsResponse",
  () => [
    { no: 1, name: "groups", kind: "message", T: Group, repeated: true },
  ],
);

/**
 * @generated from message noted.notes.v1.GetMemberRequest
 */
export const GetMemberRequest = proto3.makeMessageType(
  "noted.notes.v1.GetMemberRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetMemberResponse
 */
export const GetMemberResponse = proto3.makeMessageType(
  "noted.notes.v1.GetMemberResponse",
  () => [
    { no: 1, name: "member", kind: "message", T: GroupMember },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateMemberRequest
 */
export const UpdateMemberRequest = proto3.makeMessageType(
  "noted.notes.v1.UpdateMemberRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "member", kind: "message", T: GroupMember },
    { no: 4, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateMemberResponse
 */
export const UpdateMemberResponse = proto3.makeMessageType(
  "noted.notes.v1.UpdateMemberResponse",
  () => [
    { no: 1, name: "member", kind: "message", T: GroupMember },
  ],
);

/**
 * @generated from message noted.notes.v1.RemoveMemberRequest
 */
export const RemoveMemberRequest = proto3.makeMessageType(
  "noted.notes.v1.RemoveMemberRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.RemoveMemberResponse
 */
export const RemoveMemberResponse = proto3.makeMessageType(
  "noted.notes.v1.RemoveMemberResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.GetConversationRequest
 */
export const GetConversationRequest = proto3.makeMessageType(
  "noted.notes.v1.GetConversationRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetConversationResponse
 */
export const GetConversationResponse = proto3.makeMessageType(
  "noted.notes.v1.GetConversationResponse",
  () => [
    { no: 1, name: "conversation", kind: "message", T: GroupConversation },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateConversationRequest
 */
export const UpdateConversationRequest = proto3.makeMessageType(
  "noted.notes.v1.UpdateConversationRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateConversationResponse
 */
export const UpdateConversationResponse = proto3.makeMessageType(
  "noted.notes.v1.UpdateConversationResponse",
  () => [
    { no: 1, name: "conversation", kind: "message", T: GroupConversation },
  ],
);

/**
 * @generated from message noted.notes.v1.SendConversationMessageRequest
 */
export const SendConversationMessageRequest = proto3.makeMessageType(
  "noted.notes.v1.SendConversationMessageRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.SendConversationMessageResponse
 */
export const SendConversationMessageResponse = proto3.makeMessageType(
  "noted.notes.v1.SendConversationMessageResponse",
  () => [
    { no: 1, name: "message", kind: "message", T: ConversationMessage },
  ],
);

/**
 * @generated from message noted.notes.v1.GetConversationMessageRequest
 */
export const GetConversationMessageRequest = proto3.makeMessageType(
  "noted.notes.v1.GetConversationMessageRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetConversationMessageResponse
 */
export const GetConversationMessageResponse = proto3.makeMessageType(
  "noted.notes.v1.GetConversationMessageResponse",
  () => [
    { no: 1, name: "message", kind: "message", T: ConversationMessage },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateConversationMessageRequest
 */
export const UpdateConversationMessageRequest = proto3.makeMessageType(
  "noted.notes.v1.UpdateConversationMessageRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.UpdateConversationMessageResponse
 */
export const UpdateConversationMessageResponse = proto3.makeMessageType(
  "noted.notes.v1.UpdateConversationMessageResponse",
  () => [
    { no: 1, name: "message", kind: "message", T: ConversationMessage },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteConversationMessageRequest
 */
export const DeleteConversationMessageRequest = proto3.makeMessageType(
  "noted.notes.v1.DeleteConversationMessageRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.DeleteConversationMessageResponse
 */
export const DeleteConversationMessageResponse = proto3.makeMessageType(
  "noted.notes.v1.DeleteConversationMessageResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.ListConversationMessagesRequest
 */
export const ListConversationMessagesRequest = proto3.makeMessageType(
  "noted.notes.v1.ListConversationMessagesRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message noted.notes.v1.ListConversationMessagesResponse
 */
export const ListConversationMessagesResponse = proto3.makeMessageType(
  "noted.notes.v1.ListConversationMessagesResponse",
  () => [
    { no: 1, name: "messages", kind: "message", T: ConversationMessage, repeated: true },
  ],
);

/**
 * @generated from message noted.notes.v1.GenerateInviteLinkRequest
 */
export const GenerateInviteLinkRequest = proto3.makeMessageType(
  "noted.notes.v1.GenerateInviteLinkRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GenerateInviteLinkResponse
 */
export const GenerateInviteLinkResponse = proto3.makeMessageType(
  "noted.notes.v1.GenerateInviteLinkResponse",
  () => [
    { no: 1, name: "invite_link", kind: "message", T: GroupInviteLink },
  ],
);

/**
 * @generated from message noted.notes.v1.GetInviteLinkRequest
 */
export const GetInviteLinkRequest = proto3.makeMessageType(
  "noted.notes.v1.GetInviteLinkRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_link_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetInviteLinkResponse
 */
export const GetInviteLinkResponse = proto3.makeMessageType(
  "noted.notes.v1.GetInviteLinkResponse",
  () => [
    { no: 1, name: "invite_link", kind: "message", T: GroupInviteLink },
  ],
);

/**
 * @generated from message noted.notes.v1.RevokeInviteLinkRequest
 */
export const RevokeInviteLinkRequest = proto3.makeMessageType(
  "noted.notes.v1.RevokeInviteLinkRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_link_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.RevokeInviteLinkResponse
 */
export const RevokeInviteLinkResponse = proto3.makeMessageType(
  "noted.notes.v1.RevokeInviteLinkResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.UseInviteLinkRequest
 */
export const UseInviteLinkRequest = proto3.makeMessageType(
  "noted.notes.v1.UseInviteLinkRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_link_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.UseInviteLinkResponse
 */
export const UseInviteLinkResponse = proto3.makeMessageType(
  "noted.notes.v1.UseInviteLinkResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.SendInviteRequest
 */
export const SendInviteRequest = proto3.makeMessageType(
  "noted.notes.v1.SendInviteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recipient_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.SendInviteResponse
 */
export const SendInviteResponse = proto3.makeMessageType(
  "noted.notes.v1.SendInviteResponse",
  () => [
    { no: 1, name: "invite", kind: "message", T: GroupInvite },
  ],
);

/**
 * @generated from message noted.notes.v1.GetInviteRequest
 */
export const GetInviteRequest = proto3.makeMessageType(
  "noted.notes.v1.GetInviteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.GetInviteResponse
 */
export const GetInviteResponse = proto3.makeMessageType(
  "noted.notes.v1.GetInviteResponse",
  () => [
    { no: 1, name: "invite", kind: "message", T: GroupInvite },
  ],
);

/**
 * @generated from message noted.notes.v1.AcceptInviteRequest
 */
export const AcceptInviteRequest = proto3.makeMessageType(
  "noted.notes.v1.AcceptInviteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.AcceptInviteResponse
 */
export const AcceptInviteResponse = proto3.makeMessageType(
  "noted.notes.v1.AcceptInviteResponse",
  () => [
    { no: 1, name: "member", kind: "message", T: GroupMember },
  ],
);

/**
 * @generated from message noted.notes.v1.DenyInviteRequest
 */
export const DenyInviteRequest = proto3.makeMessageType(
  "noted.notes.v1.DenyInviteRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.DenyInviteResponse
 */
export const DenyInviteResponse = proto3.makeMessageType(
  "noted.notes.v1.DenyInviteResponse",
  [],
);

/**
 * @generated from message noted.notes.v1.ListInvitesRequest
 */
export const ListInvitesRequest = proto3.makeMessageType(
  "noted.notes.v1.ListInvitesRequest",
  () => [
    { no: 1, name: "sender_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recipient_account_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message noted.notes.v1.ListInvitesResponse
 */
export const ListInvitesResponse = proto3.makeMessageType(
  "noted.notes.v1.ListInvitesResponse",
  () => [
    { no: 1, name: "invites", kind: "message", T: GroupInvite, repeated: true },
  ],
);

/**
 * @generated from message noted.notes.v1.RevokeInviteRequest
 */
export const RevokeInviteRequest = proto3.makeMessageType(
  "noted.notes.v1.RevokeInviteRequest",
  () => [
    { no: 1, name: "invite_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message noted.notes.v1.RevokeInviteResponse
 */
export const RevokeInviteResponse = proto3.makeMessageType(
  "noted.notes.v1.RevokeInviteResponse",
  [],
);

