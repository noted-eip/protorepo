// @generated by protoc-gen-es v1.0.0
// @generated from file noted/notes/v1/groups.proto (package noted.notes.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message noted.notes.v1.ConversationMessage
 */
export declare class ConversationMessage extends Message<ConversationMessage> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 3;
   */
  conversationId: string;

  /**
   * @generated from field: string sender_account_id = 4;
   */
  senderAccountId: string;

  /**
   * @generated from field: string content = 5;
   */
  content: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp modified_at = 7;
   */
  modifiedAt?: Timestamp;

  constructor(data?: PartialMessage<ConversationMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ConversationMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConversationMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConversationMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConversationMessage;

  static equals(a: ConversationMessage | PlainMessage<ConversationMessage> | undefined, b: ConversationMessage | PlainMessage<ConversationMessage> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GroupConversation
 */
export declare class GroupConversation extends Message<GroupConversation> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<GroupConversation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GroupConversation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupConversation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupConversation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupConversation;

  static equals(a: GroupConversation | PlainMessage<GroupConversation> | undefined, b: GroupConversation | PlainMessage<GroupConversation> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GroupMember
 */
export declare class GroupMember extends Message<GroupMember> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  /**
   * @generated from field: bool is_admin = 2;
   */
  isAdmin: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp joined_at = 3;
   */
  joinedAt?: Timestamp;

  constructor(data?: PartialMessage<GroupMember>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GroupMember";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupMember;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupMember;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupMember;

  static equals(a: GroupMember | PlainMessage<GroupMember> | undefined, b: GroupMember | PlainMessage<GroupMember> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GroupInvite
 */
export declare class GroupInvite extends Message<GroupInvite> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string group_id = 2;
   */
  groupId: string;

  /**
   * @generated from field: string sender_account_id = 3;
   */
  senderAccountId: string;

  /**
   * @generated from field: string recipient_account_id = 4;
   */
  recipientAccountId: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp valid_until = 6;
   */
  validUntil?: Timestamp;

  constructor(data?: PartialMessage<GroupInvite>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GroupInvite";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupInvite;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupInvite;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupInvite;

  static equals(a: GroupInvite | PlainMessage<GroupInvite> | undefined, b: GroupInvite | PlainMessage<GroupInvite> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GroupInviteLink
 */
export declare class GroupInviteLink extends Message<GroupInviteLink> {
  /**
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * @generated from field: string generated_by_account_id = 2;
   */
  generatedByAccountId: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp valid_until = 4;
   */
  validUntil?: Timestamp;

  constructor(data?: PartialMessage<GroupInviteLink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GroupInviteLink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupInviteLink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupInviteLink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupInviteLink;

  static equals(a: GroupInviteLink | PlainMessage<GroupInviteLink> | undefined, b: GroupInviteLink | PlainMessage<GroupInviteLink> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.Group
 */
export declare class Group extends Message<Group> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string workspace_account_id = 4;
   */
  workspaceAccountId: string;

  /**
   * @generated from field: string avatar_url = 5;
   */
  avatarUrl: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp modified_at = 7;
   */
  modifiedAt?: Timestamp;

  /**
   * @generated from field: repeated noted.notes.v1.GroupMember members = 8;
   */
  members: GroupMember[];

  /**
   * @generated from field: repeated noted.notes.v1.GroupConversation conversations = 9;
   */
  conversations: GroupConversation[];

  /**
   * @generated from field: repeated noted.notes.v1.GroupInvite invites = 10;
   */
  invites: GroupInvite[];

  /**
   * @generated from field: repeated noted.notes.v1.GroupInviteLink invite_links = 11;
   */
  inviteLinks: GroupInviteLink[];

  constructor(data?: PartialMessage<Group>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.Group";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group;

  static equals(a: Group | PlainMessage<Group> | undefined, b: Group | PlainMessage<Group> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.CreateGroupRequest
 */
export declare class CreateGroupRequest extends Message<CreateGroupRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  constructor(data?: PartialMessage<CreateGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.CreateGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGroupRequest;

  static equals(a: CreateGroupRequest | PlainMessage<CreateGroupRequest> | undefined, b: CreateGroupRequest | PlainMessage<CreateGroupRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.CreateGroupResponse
 */
export declare class CreateGroupResponse extends Message<CreateGroupResponse> {
  /**
   * @generated from field: noted.notes.v1.Group group = 1;
   */
  group?: Group;

  constructor(data?: PartialMessage<CreateGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.CreateGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGroupResponse;

  static equals(a: CreateGroupResponse | PlainMessage<CreateGroupResponse> | undefined, b: CreateGroupResponse | PlainMessage<CreateGroupResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.CreateWorkspaceRequest
 */
export declare class CreateWorkspaceRequest extends Message<CreateWorkspaceRequest> {
  constructor(data?: PartialMessage<CreateWorkspaceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.CreateWorkspaceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWorkspaceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWorkspaceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWorkspaceRequest;

  static equals(a: CreateWorkspaceRequest | PlainMessage<CreateWorkspaceRequest> | undefined, b: CreateWorkspaceRequest | PlainMessage<CreateWorkspaceRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.CreateWorkspaceResponse
 */
export declare class CreateWorkspaceResponse extends Message<CreateWorkspaceResponse> {
  /**
   * @generated from field: noted.notes.v1.Group group = 1;
   */
  group?: Group;

  constructor(data?: PartialMessage<CreateWorkspaceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.CreateWorkspaceResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWorkspaceResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWorkspaceResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWorkspaceResponse;

  static equals(a: CreateWorkspaceResponse | PlainMessage<CreateWorkspaceResponse> | undefined, b: CreateWorkspaceResponse | PlainMessage<CreateWorkspaceResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetGroupRequest
 */
export declare class GetGroupRequest extends Message<GetGroupRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * (Optional) If the requester isn't a member of the group nor have they
   * been invited directly, they can provide an invite_link_code that will
   * give them a public preview of the group they wish to join.
   *
   * @generated from field: string invite_link_code = 2;
   */
  inviteLinkCode: string;

  constructor(data?: PartialMessage<GetGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGroupRequest;

  static equals(a: GetGroupRequest | PlainMessage<GetGroupRequest> | undefined, b: GetGroupRequest | PlainMessage<GetGroupRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetGroupResponse
 */
export declare class GetGroupResponse extends Message<GetGroupResponse> {
  /**
   * @generated from field: noted.notes.v1.Group group = 1;
   */
  group?: Group;

  constructor(data?: PartialMessage<GetGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGroupResponse;

  static equals(a: GetGroupResponse | PlainMessage<GetGroupResponse> | undefined, b: GetGroupResponse | PlainMessage<GetGroupResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteGroupRequest
 */
export declare class DeleteGroupRequest extends Message<DeleteGroupRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  constructor(data?: PartialMessage<DeleteGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteGroupRequest;

  static equals(a: DeleteGroupRequest | PlainMessage<DeleteGroupRequest> | undefined, b: DeleteGroupRequest | PlainMessage<DeleteGroupRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteGroupResponse
 */
export declare class DeleteGroupResponse extends Message<DeleteGroupResponse> {
  constructor(data?: PartialMessage<DeleteGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteGroupResponse;

  static equals(a: DeleteGroupResponse | PlainMessage<DeleteGroupResponse> | undefined, b: DeleteGroupResponse | PlainMessage<DeleteGroupResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateGroupRequest
 */
export declare class UpdateGroupRequest extends Message<UpdateGroupRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  constructor(data?: PartialMessage<UpdateGroupRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateGroupRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGroupRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGroupRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGroupRequest;

  static equals(a: UpdateGroupRequest | PlainMessage<UpdateGroupRequest> | undefined, b: UpdateGroupRequest | PlainMessage<UpdateGroupRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateGroupResponse
 */
export declare class UpdateGroupResponse extends Message<UpdateGroupResponse> {
  /**
   * @generated from field: noted.notes.v1.Group group = 1;
   */
  group?: Group;

  constructor(data?: PartialMessage<UpdateGroupResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateGroupResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGroupResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGroupResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGroupResponse;

  static equals(a: UpdateGroupResponse | PlainMessage<UpdateGroupResponse> | undefined, b: UpdateGroupResponse | PlainMessage<UpdateGroupResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListGroupsRequest
 */
export declare class ListGroupsRequest extends Message<ListGroupsRequest> {
  /**
   * @generated from field: string account_id = 1;
   */
  accountId: string;

  constructor(data?: PartialMessage<ListGroupsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListGroupsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGroupsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGroupsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGroupsRequest;

  static equals(a: ListGroupsRequest | PlainMessage<ListGroupsRequest> | undefined, b: ListGroupsRequest | PlainMessage<ListGroupsRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListGroupsResponse
 */
export declare class ListGroupsResponse extends Message<ListGroupsResponse> {
  /**
   * @generated from field: repeated noted.notes.v1.Group groups = 1;
   */
  groups: Group[];

  constructor(data?: PartialMessage<ListGroupsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListGroupsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGroupsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGroupsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGroupsResponse;

  static equals(a: ListGroupsResponse | PlainMessage<ListGroupsResponse> | undefined, b: ListGroupsResponse | PlainMessage<ListGroupsResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetMemberRequest
 */
export declare class GetMemberRequest extends Message<GetMemberRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  constructor(data?: PartialMessage<GetMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMemberRequest;

  static equals(a: GetMemberRequest | PlainMessage<GetMemberRequest> | undefined, b: GetMemberRequest | PlainMessage<GetMemberRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetMemberResponse
 */
export declare class GetMemberResponse extends Message<GetMemberResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupMember member = 1;
   */
  member?: GroupMember;

  constructor(data?: PartialMessage<GetMemberResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetMemberResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMemberResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMemberResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMemberResponse;

  static equals(a: GetMemberResponse | PlainMessage<GetMemberResponse> | undefined, b: GetMemberResponse | PlainMessage<GetMemberResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateMemberRequest
 */
export declare class UpdateMemberRequest extends Message<UpdateMemberRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  /**
   * @generated from field: noted.notes.v1.GroupMember member = 3;
   */
  member?: GroupMember;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMemberRequest;

  static equals(a: UpdateMemberRequest | PlainMessage<UpdateMemberRequest> | undefined, b: UpdateMemberRequest | PlainMessage<UpdateMemberRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateMemberResponse
 */
export declare class UpdateMemberResponse extends Message<UpdateMemberResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupMember member = 1;
   */
  member?: GroupMember;

  constructor(data?: PartialMessage<UpdateMemberResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateMemberResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMemberResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMemberResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMemberResponse;

  static equals(a: UpdateMemberResponse | PlainMessage<UpdateMemberResponse> | undefined, b: UpdateMemberResponse | PlainMessage<UpdateMemberResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.RemoveMemberRequest
 */
export declare class RemoveMemberRequest extends Message<RemoveMemberRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string account_id = 2;
   */
  accountId: string;

  constructor(data?: PartialMessage<RemoveMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.RemoveMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMemberRequest;

  static equals(a: RemoveMemberRequest | PlainMessage<RemoveMemberRequest> | undefined, b: RemoveMemberRequest | PlainMessage<RemoveMemberRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.RemoveMemberResponse
 */
export declare class RemoveMemberResponse extends Message<RemoveMemberResponse> {
  constructor(data?: PartialMessage<RemoveMemberResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.RemoveMemberResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveMemberResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveMemberResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveMemberResponse;

  static equals(a: RemoveMemberResponse | PlainMessage<RemoveMemberResponse> | undefined, b: RemoveMemberResponse | PlainMessage<RemoveMemberResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetConversationRequest
 */
export declare class GetConversationRequest extends Message<GetConversationRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  constructor(data?: PartialMessage<GetConversationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetConversationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConversationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConversationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConversationRequest;

  static equals(a: GetConversationRequest | PlainMessage<GetConversationRequest> | undefined, b: GetConversationRequest | PlainMessage<GetConversationRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetConversationResponse
 */
export declare class GetConversationResponse extends Message<GetConversationResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupConversation conversation = 1;
   */
  conversation?: GroupConversation;

  constructor(data?: PartialMessage<GetConversationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetConversationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConversationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConversationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConversationResponse;

  static equals(a: GetConversationResponse | PlainMessage<GetConversationResponse> | undefined, b: GetConversationResponse | PlainMessage<GetConversationResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateConversationRequest
 */
export declare class UpdateConversationRequest extends Message<UpdateConversationRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  constructor(data?: PartialMessage<UpdateConversationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateConversationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConversationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConversationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConversationRequest;

  static equals(a: UpdateConversationRequest | PlainMessage<UpdateConversationRequest> | undefined, b: UpdateConversationRequest | PlainMessage<UpdateConversationRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateConversationResponse
 */
export declare class UpdateConversationResponse extends Message<UpdateConversationResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupConversation conversation = 1;
   */
  conversation?: GroupConversation;

  constructor(data?: PartialMessage<UpdateConversationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateConversationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConversationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConversationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConversationResponse;

  static equals(a: UpdateConversationResponse | PlainMessage<UpdateConversationResponse> | undefined, b: UpdateConversationResponse | PlainMessage<UpdateConversationResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.SendConversationMessageRequest
 */
export declare class SendConversationMessageRequest extends Message<SendConversationMessageRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * @generated from field: string content = 3;
   */
  content: string;

  constructor(data?: PartialMessage<SendConversationMessageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.SendConversationMessageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendConversationMessageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendConversationMessageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendConversationMessageRequest;

  static equals(a: SendConversationMessageRequest | PlainMessage<SendConversationMessageRequest> | undefined, b: SendConversationMessageRequest | PlainMessage<SendConversationMessageRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.SendConversationMessageResponse
 */
export declare class SendConversationMessageResponse extends Message<SendConversationMessageResponse> {
  /**
   * @generated from field: noted.notes.v1.ConversationMessage message = 1;
   */
  message?: ConversationMessage;

  constructor(data?: PartialMessage<SendConversationMessageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.SendConversationMessageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendConversationMessageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendConversationMessageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendConversationMessageResponse;

  static equals(a: SendConversationMessageResponse | PlainMessage<SendConversationMessageResponse> | undefined, b: SendConversationMessageResponse | PlainMessage<SendConversationMessageResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetConversationMessageRequest
 */
export declare class GetConversationMessageRequest extends Message<GetConversationMessageRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * @generated from field: string message_id = 3;
   */
  messageId: string;

  constructor(data?: PartialMessage<GetConversationMessageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetConversationMessageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConversationMessageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConversationMessageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConversationMessageRequest;

  static equals(a: GetConversationMessageRequest | PlainMessage<GetConversationMessageRequest> | undefined, b: GetConversationMessageRequest | PlainMessage<GetConversationMessageRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetConversationMessageResponse
 */
export declare class GetConversationMessageResponse extends Message<GetConversationMessageResponse> {
  /**
   * @generated from field: noted.notes.v1.ConversationMessage message = 1;
   */
  message?: ConversationMessage;

  constructor(data?: PartialMessage<GetConversationMessageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetConversationMessageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConversationMessageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConversationMessageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConversationMessageResponse;

  static equals(a: GetConversationMessageResponse | PlainMessage<GetConversationMessageResponse> | undefined, b: GetConversationMessageResponse | PlainMessage<GetConversationMessageResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateConversationMessageRequest
 */
export declare class UpdateConversationMessageRequest extends Message<UpdateConversationMessageRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * @generated from field: string message_id = 3;
   */
  messageId: string;

  /**
   * @generated from field: string content = 4;
   */
  content: string;

  constructor(data?: PartialMessage<UpdateConversationMessageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateConversationMessageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConversationMessageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConversationMessageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConversationMessageRequest;

  static equals(a: UpdateConversationMessageRequest | PlainMessage<UpdateConversationMessageRequest> | undefined, b: UpdateConversationMessageRequest | PlainMessage<UpdateConversationMessageRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UpdateConversationMessageResponse
 */
export declare class UpdateConversationMessageResponse extends Message<UpdateConversationMessageResponse> {
  /**
   * @generated from field: noted.notes.v1.ConversationMessage message = 1;
   */
  message?: ConversationMessage;

  constructor(data?: PartialMessage<UpdateConversationMessageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UpdateConversationMessageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConversationMessageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConversationMessageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConversationMessageResponse;

  static equals(a: UpdateConversationMessageResponse | PlainMessage<UpdateConversationMessageResponse> | undefined, b: UpdateConversationMessageResponse | PlainMessage<UpdateConversationMessageResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteConversationMessageRequest
 */
export declare class DeleteConversationMessageRequest extends Message<DeleteConversationMessageRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * @generated from field: string message_id = 3;
   */
  messageId: string;

  constructor(data?: PartialMessage<DeleteConversationMessageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteConversationMessageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConversationMessageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConversationMessageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConversationMessageRequest;

  static equals(a: DeleteConversationMessageRequest | PlainMessage<DeleteConversationMessageRequest> | undefined, b: DeleteConversationMessageRequest | PlainMessage<DeleteConversationMessageRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DeleteConversationMessageResponse
 */
export declare class DeleteConversationMessageResponse extends Message<DeleteConversationMessageResponse> {
  constructor(data?: PartialMessage<DeleteConversationMessageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DeleteConversationMessageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConversationMessageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConversationMessageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConversationMessageResponse;

  static equals(a: DeleteConversationMessageResponse | PlainMessage<DeleteConversationMessageResponse> | undefined, b: DeleteConversationMessageResponse | PlainMessage<DeleteConversationMessageResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListConversationMessagesRequest
 */
export declare class ListConversationMessagesRequest extends Message<ListConversationMessagesRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string conversation_id = 2;
   */
  conversationId: string;

  /**
   * @generated from field: int32 limit = 3;
   */
  limit: number;

  /**
   * @generated from field: int32 offset = 4;
   */
  offset: number;

  constructor(data?: PartialMessage<ListConversationMessagesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListConversationMessagesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConversationMessagesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConversationMessagesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConversationMessagesRequest;

  static equals(a: ListConversationMessagesRequest | PlainMessage<ListConversationMessagesRequest> | undefined, b: ListConversationMessagesRequest | PlainMessage<ListConversationMessagesRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListConversationMessagesResponse
 */
export declare class ListConversationMessagesResponse extends Message<ListConversationMessagesResponse> {
  /**
   * @generated from field: repeated noted.notes.v1.ConversationMessage messages = 1;
   */
  messages: ConversationMessage[];

  constructor(data?: PartialMessage<ListConversationMessagesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListConversationMessagesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConversationMessagesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConversationMessagesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConversationMessagesResponse;

  static equals(a: ListConversationMessagesResponse | PlainMessage<ListConversationMessagesResponse> | undefined, b: ListConversationMessagesResponse | PlainMessage<ListConversationMessagesResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GenerateInviteLinkRequest
 */
export declare class GenerateInviteLinkRequest extends Message<GenerateInviteLinkRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  constructor(data?: PartialMessage<GenerateInviteLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GenerateInviteLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInviteLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInviteLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInviteLinkRequest;

  static equals(a: GenerateInviteLinkRequest | PlainMessage<GenerateInviteLinkRequest> | undefined, b: GenerateInviteLinkRequest | PlainMessage<GenerateInviteLinkRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GenerateInviteLinkResponse
 */
export declare class GenerateInviteLinkResponse extends Message<GenerateInviteLinkResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupInviteLink invite_link = 1;
   */
  inviteLink?: GroupInviteLink;

  constructor(data?: PartialMessage<GenerateInviteLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GenerateInviteLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateInviteLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateInviteLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateInviteLinkResponse;

  static equals(a: GenerateInviteLinkResponse | PlainMessage<GenerateInviteLinkResponse> | undefined, b: GenerateInviteLinkResponse | PlainMessage<GenerateInviteLinkResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetInviteLinkRequest
 */
export declare class GetInviteLinkRequest extends Message<GetInviteLinkRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string invite_link_code = 2;
   */
  inviteLinkCode: string;

  constructor(data?: PartialMessage<GetInviteLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetInviteLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInviteLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInviteLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInviteLinkRequest;

  static equals(a: GetInviteLinkRequest | PlainMessage<GetInviteLinkRequest> | undefined, b: GetInviteLinkRequest | PlainMessage<GetInviteLinkRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetInviteLinkResponse
 */
export declare class GetInviteLinkResponse extends Message<GetInviteLinkResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupInviteLink invite_link = 1;
   */
  inviteLink?: GroupInviteLink;

  constructor(data?: PartialMessage<GetInviteLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetInviteLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInviteLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInviteLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInviteLinkResponse;

  static equals(a: GetInviteLinkResponse | PlainMessage<GetInviteLinkResponse> | undefined, b: GetInviteLinkResponse | PlainMessage<GetInviteLinkResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.RevokeInviteLinkRequest
 */
export declare class RevokeInviteLinkRequest extends Message<RevokeInviteLinkRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string invite_link_code = 2;
   */
  inviteLinkCode: string;

  constructor(data?: PartialMessage<RevokeInviteLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.RevokeInviteLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeInviteLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeInviteLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeInviteLinkRequest;

  static equals(a: RevokeInviteLinkRequest | PlainMessage<RevokeInviteLinkRequest> | undefined, b: RevokeInviteLinkRequest | PlainMessage<RevokeInviteLinkRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.RevokeInviteLinkResponse
 */
export declare class RevokeInviteLinkResponse extends Message<RevokeInviteLinkResponse> {
  constructor(data?: PartialMessage<RevokeInviteLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.RevokeInviteLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeInviteLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeInviteLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeInviteLinkResponse;

  static equals(a: RevokeInviteLinkResponse | PlainMessage<RevokeInviteLinkResponse> | undefined, b: RevokeInviteLinkResponse | PlainMessage<RevokeInviteLinkResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UseInviteLinkRequest
 */
export declare class UseInviteLinkRequest extends Message<UseInviteLinkRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string invite_link_code = 2;
   */
  inviteLinkCode: string;

  constructor(data?: PartialMessage<UseInviteLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UseInviteLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UseInviteLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UseInviteLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UseInviteLinkRequest;

  static equals(a: UseInviteLinkRequest | PlainMessage<UseInviteLinkRequest> | undefined, b: UseInviteLinkRequest | PlainMessage<UseInviteLinkRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.UseInviteLinkResponse
 */
export declare class UseInviteLinkResponse extends Message<UseInviteLinkResponse> {
  constructor(data?: PartialMessage<UseInviteLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.UseInviteLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UseInviteLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UseInviteLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UseInviteLinkResponse;

  static equals(a: UseInviteLinkResponse | PlainMessage<UseInviteLinkResponse> | undefined, b: UseInviteLinkResponse | PlainMessage<UseInviteLinkResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.SendInviteRequest
 */
export declare class SendInviteRequest extends Message<SendInviteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string recipient_account_id = 2;
   */
  recipientAccountId: string;

  constructor(data?: PartialMessage<SendInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.SendInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendInviteRequest;

  static equals(a: SendInviteRequest | PlainMessage<SendInviteRequest> | undefined, b: SendInviteRequest | PlainMessage<SendInviteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.SendInviteResponse
 */
export declare class SendInviteResponse extends Message<SendInviteResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupInvite invite = 1;
   */
  invite?: GroupInvite;

  constructor(data?: PartialMessage<SendInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.SendInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendInviteResponse;

  static equals(a: SendInviteResponse | PlainMessage<SendInviteResponse> | undefined, b: SendInviteResponse | PlainMessage<SendInviteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetInviteRequest
 */
export declare class GetInviteRequest extends Message<GetInviteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string invite_id = 2;
   */
  inviteId: string;

  constructor(data?: PartialMessage<GetInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInviteRequest;

  static equals(a: GetInviteRequest | PlainMessage<GetInviteRequest> | undefined, b: GetInviteRequest | PlainMessage<GetInviteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.GetInviteResponse
 */
export declare class GetInviteResponse extends Message<GetInviteResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupInvite invite = 1;
   */
  invite?: GroupInvite;

  constructor(data?: PartialMessage<GetInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.GetInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetInviteResponse;

  static equals(a: GetInviteResponse | PlainMessage<GetInviteResponse> | undefined, b: GetInviteResponse | PlainMessage<GetInviteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.AcceptInviteRequest
 */
export declare class AcceptInviteRequest extends Message<AcceptInviteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string invite_id = 2;
   */
  inviteId: string;

  constructor(data?: PartialMessage<AcceptInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.AcceptInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptInviteRequest;

  static equals(a: AcceptInviteRequest | PlainMessage<AcceptInviteRequest> | undefined, b: AcceptInviteRequest | PlainMessage<AcceptInviteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.AcceptInviteResponse
 */
export declare class AcceptInviteResponse extends Message<AcceptInviteResponse> {
  /**
   * @generated from field: noted.notes.v1.GroupMember member = 1;
   */
  member?: GroupMember;

  constructor(data?: PartialMessage<AcceptInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.AcceptInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptInviteResponse;

  static equals(a: AcceptInviteResponse | PlainMessage<AcceptInviteResponse> | undefined, b: AcceptInviteResponse | PlainMessage<AcceptInviteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DenyInviteRequest
 */
export declare class DenyInviteRequest extends Message<DenyInviteRequest> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId: string;

  /**
   * @generated from field: string invite_id = 2;
   */
  inviteId: string;

  constructor(data?: PartialMessage<DenyInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DenyInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DenyInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DenyInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DenyInviteRequest;

  static equals(a: DenyInviteRequest | PlainMessage<DenyInviteRequest> | undefined, b: DenyInviteRequest | PlainMessage<DenyInviteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.DenyInviteResponse
 */
export declare class DenyInviteResponse extends Message<DenyInviteResponse> {
  constructor(data?: PartialMessage<DenyInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.DenyInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DenyInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DenyInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DenyInviteResponse;

  static equals(a: DenyInviteResponse | PlainMessage<DenyInviteResponse> | undefined, b: DenyInviteResponse | PlainMessage<DenyInviteResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListInvitesRequest
 */
export declare class ListInvitesRequest extends Message<ListInvitesRequest> {
  /**
   * (Optional) Returns only invites from sender.
   *
   * @generated from field: string sender_account_id = 1;
   */
  senderAccountId: string;

  /**
   * (Optional) Returns only invites destined to recipient.
   *
   * @generated from field: string recipient_account_id = 2;
   */
  recipientAccountId: string;

  /**
   * (Optional) Returns only invites for a given group.
   *
   * @generated from field: string group_id = 3;
   */
  groupId: string;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit: number;

  /**
   * @generated from field: int32 offset = 5;
   */
  offset: number;

  constructor(data?: PartialMessage<ListInvitesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListInvitesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInvitesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInvitesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInvitesRequest;

  static equals(a: ListInvitesRequest | PlainMessage<ListInvitesRequest> | undefined, b: ListInvitesRequest | PlainMessage<ListInvitesRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.ListInvitesResponse
 */
export declare class ListInvitesResponse extends Message<ListInvitesResponse> {
  /**
   * @generated from field: repeated noted.notes.v1.GroupInvite invites = 1;
   */
  invites: GroupInvite[];

  constructor(data?: PartialMessage<ListInvitesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.ListInvitesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListInvitesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListInvitesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListInvitesResponse;

  static equals(a: ListInvitesResponse | PlainMessage<ListInvitesResponse> | undefined, b: ListInvitesResponse | PlainMessage<ListInvitesResponse> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.RevokeInviteRequest
 */
export declare class RevokeInviteRequest extends Message<RevokeInviteRequest> {
  /**
   * @generated from field: string invite_id = 1;
   */
  inviteId: string;

  constructor(data?: PartialMessage<RevokeInviteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.RevokeInviteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeInviteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeInviteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeInviteRequest;

  static equals(a: RevokeInviteRequest | PlainMessage<RevokeInviteRequest> | undefined, b: RevokeInviteRequest | PlainMessage<RevokeInviteRequest> | undefined): boolean;
}

/**
 * @generated from message noted.notes.v1.RevokeInviteResponse
 */
export declare class RevokeInviteResponse extends Message<RevokeInviteResponse> {
  constructor(data?: PartialMessage<RevokeInviteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "noted.notes.v1.RevokeInviteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeInviteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeInviteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeInviteResponse;

  static equals(a: RevokeInviteResponse | PlainMessage<RevokeInviteResponse> | undefined, b: RevokeInviteResponse | PlainMessage<RevokeInviteResponse> | undefined): boolean;
}

