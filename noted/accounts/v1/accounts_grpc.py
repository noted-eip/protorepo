# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: noted/accounts/v1/accounts.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.field_mask_pb2
import noted.accounts.v1.accounts_pb2


class AccountsAPIBase(abc.ABC):

    @abc.abstractmethod
    async def CreateAccount(self, stream: 'grpclib.server.Stream[noted.accounts.v1.accounts_pb2.CreateAccountRequest, noted.accounts.v1.accounts_pb2.CreateAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetAccount(self, stream: 'grpclib.server.Stream[noted.accounts.v1.accounts_pb2.GetAccountRequest, noted.accounts.v1.accounts_pb2.GetAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateAccount(self, stream: 'grpclib.server.Stream[noted.accounts.v1.accounts_pb2.UpdateAccountRequest, noted.accounts.v1.accounts_pb2.UpdateAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteAccount(self, stream: 'grpclib.server.Stream[noted.accounts.v1.accounts_pb2.DeleteAccountRequest, noted.accounts.v1.accounts_pb2.DeleteAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Authenticate(self, stream: 'grpclib.server.Stream[noted.accounts.v1.accounts_pb2.AuthenticateRequest, noted.accounts.v1.accounts_pb2.AuthenticateResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/noted.accounts.v1.AccountsAPI/CreateAccount': grpclib.const.Handler(
                self.CreateAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.accounts_pb2.CreateAccountRequest,
                noted.accounts.v1.accounts_pb2.CreateAccountResponse,
            ),
            '/noted.accounts.v1.AccountsAPI/GetAccount': grpclib.const.Handler(
                self.GetAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.accounts_pb2.GetAccountRequest,
                noted.accounts.v1.accounts_pb2.GetAccountResponse,
            ),
            '/noted.accounts.v1.AccountsAPI/UpdateAccount': grpclib.const.Handler(
                self.UpdateAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.accounts_pb2.UpdateAccountRequest,
                noted.accounts.v1.accounts_pb2.UpdateAccountResponse,
            ),
            '/noted.accounts.v1.AccountsAPI/DeleteAccount': grpclib.const.Handler(
                self.DeleteAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.accounts_pb2.DeleteAccountRequest,
                noted.accounts.v1.accounts_pb2.DeleteAccountResponse,
            ),
            '/noted.accounts.v1.AccountsAPI/Authenticate': grpclib.const.Handler(
                self.Authenticate,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.accounts_pb2.AuthenticateRequest,
                noted.accounts.v1.accounts_pb2.AuthenticateResponse,
            ),
        }


class AccountsAPIStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.AccountsAPI/CreateAccount',
            noted.accounts.v1.accounts_pb2.CreateAccountRequest,
            noted.accounts.v1.accounts_pb2.CreateAccountResponse,
        )
        self.GetAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.AccountsAPI/GetAccount',
            noted.accounts.v1.accounts_pb2.GetAccountRequest,
            noted.accounts.v1.accounts_pb2.GetAccountResponse,
        )
        self.UpdateAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.AccountsAPI/UpdateAccount',
            noted.accounts.v1.accounts_pb2.UpdateAccountRequest,
            noted.accounts.v1.accounts_pb2.UpdateAccountResponse,
        )
        self.DeleteAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.AccountsAPI/DeleteAccount',
            noted.accounts.v1.accounts_pb2.DeleteAccountRequest,
            noted.accounts.v1.accounts_pb2.DeleteAccountResponse,
        )
        self.Authenticate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.AccountsAPI/Authenticate',
            noted.accounts.v1.accounts_pb2.AuthenticateRequest,
            noted.accounts.v1.accounts_pb2.AuthenticateResponse,
        )
