# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: noted/accounts/v1/groups.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.field_mask_pb2
import noted.accounts.v1.groups_pb2


class GroupsAPIBase(abc.ABC):

    @abc.abstractmethod
    async def CreateGroup(self, stream: 'grpclib.server.Stream[noted.accounts.v1.groups_pb2.CreateGroupRequest, noted.accounts.v1.groups_pb2.CreateGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteGroup(self, stream: 'grpclib.server.Stream[noted.accounts.v1.groups_pb2.DeleteGroupRequest, noted.accounts.v1.groups_pb2.DeleteGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateGroup(self, stream: 'grpclib.server.Stream[noted.accounts.v1.groups_pb2.UpdateGroupRequest, noted.accounts.v1.groups_pb2.UpdateGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListGroupMembers(self, stream: 'grpclib.server.Stream[noted.accounts.v1.groups_pb2.ListGroupMembersRequest, noted.accounts.v1.groups_pb2.ListGroupMembersResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/noted.accounts.v1.GroupsAPI/CreateGroup': grpclib.const.Handler(
                self.CreateGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.groups_pb2.CreateGroupRequest,
                noted.accounts.v1.groups_pb2.CreateGroupResponse,
            ),
            '/noted.accounts.v1.GroupsAPI/DeleteGroup': grpclib.const.Handler(
                self.DeleteGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.groups_pb2.DeleteGroupRequest,
                noted.accounts.v1.groups_pb2.DeleteGroupResponse,
            ),
            '/noted.accounts.v1.GroupsAPI/UpdateGroup': grpclib.const.Handler(
                self.UpdateGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.groups_pb2.UpdateGroupRequest,
                noted.accounts.v1.groups_pb2.UpdateGroupResponse,
            ),
            '/noted.accounts.v1.GroupsAPI/ListGroupMembers': grpclib.const.Handler(
                self.ListGroupMembers,
                grpclib.const.Cardinality.UNARY_UNARY,
                noted.accounts.v1.groups_pb2.ListGroupMembersRequest,
                noted.accounts.v1.groups_pb2.ListGroupMembersResponse,
            ),
        }


class GroupsAPIStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.GroupsAPI/CreateGroup',
            noted.accounts.v1.groups_pb2.CreateGroupRequest,
            noted.accounts.v1.groups_pb2.CreateGroupResponse,
        )
        self.DeleteGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.GroupsAPI/DeleteGroup',
            noted.accounts.v1.groups_pb2.DeleteGroupRequest,
            noted.accounts.v1.groups_pb2.DeleteGroupResponse,
        )
        self.UpdateGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.GroupsAPI/UpdateGroup',
            noted.accounts.v1.groups_pb2.UpdateGroupRequest,
            noted.accounts.v1.groups_pb2.UpdateGroupResponse,
        )
        self.ListGroupMembers = grpclib.client.UnaryUnaryMethod(
            channel,
            '/noted.accounts.v1.GroupsAPI/ListGroupMembers',
            noted.accounts.v1.groups_pb2.ListGroupMembersRequest,
            noted.accounts.v1.groups_pb2.ListGroupMembersResponse,
        )
